"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[7474],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),b=l(r),d=i,h=b["".concat(s,".").concat(d)]||b[d]||u[d]||n;return r?a.createElement(h,c(c({ref:t},p),{},{components:r})):a.createElement(h,c({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,c=new Array(n);c[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var l=2;l<n;l++)c[l]=r[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},6627:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var a=r(3117),i=(r(7294),r(3905));const n={id:"scalability",title:"Scalability",displayed_sidebar:"homeSidebar"},c=void 0,o={unversionedId:"basics/lightpaper/architecture/scalability",id:"basics/lightpaper/architecture/scalability",title:"Scalability",description:"Subsocial allows communities to create their own space on top of the Subsocial chain, such that",source:"@site/docs/basics/lightpaper/architecture/Scalability.md",sourceDirName:"basics/lightpaper/architecture",slug:"/basics/lightpaper/architecture/scalability",permalink:"/docs/basics/lightpaper/architecture/scalability",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/basics/lightpaper/architecture/Scalability.md",tags:[],version:"current",frontMatter:{id:"scalability",title:"Scalability",displayed_sidebar:"homeSidebar"},sidebar:"homeSidebar",previous:{title:"Spaces as DAOs",permalink:"/docs/basics/lightpaper/architecture/spaces-as-DAOs"},next:{title:"Upgradability",permalink:"/docs/basics/lightpaper/architecture/upgradability"}},s={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Subsocial allows communities to create their own space on top of the Subsocial chain, such that\nall communities share the same underlying blockchain. This provides shared network effects:\nusers will be able to seamlessly join communities on any application connected to the Subsocial network\n(compared to traditional social media networks, such as Facebook and Twitter, having separate content and user bases)."))}u.isMDXComponent=!0}}]);