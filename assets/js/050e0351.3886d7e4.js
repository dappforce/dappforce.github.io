(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{161:function(e,t,o){"use strict";o.d(t,"a",(function(){return u})),o.d(t,"b",(function(){return f}));var n=o(0),c=o.n(n);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,c=function(e,t){if(null==e)return{};var o,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(c[o]=e[o]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(c[o]=e[o])}return c}var i=c.a.createContext({}),p=function(e){var t=c.a.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},u=function(e){var t=p(e.components);return c.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},b=c.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,r=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(o),b=n,f=u["".concat(r,".").concat(b)]||u[b]||d[b]||a;return o?c.a.createElement(f,s(s({ref:t},i),{},{components:o})):c.a.createElement(f,s({ref:t},i))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,r=new Array(a);r[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var i=2;i<a;i++)r[i]=o[i];return c.a.createElement.apply(null,r)}return c.a.createElement.apply(null,o)}b.displayName="MDXCreateElement"},66:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return r})),o.d(t,"metadata",(function(){return s})),o.d(t,"toc",(function(){return l})),o.d(t,"default",(function(){return p}));var n=o(3),c=o(7),a=(o(0),o(161)),r={id:"getting-follow",title:"Getting Follows"},s={unversionedId:"sdk/quick-start/follow/getting-follow",id:"sdk/quick-start/follow/getting-follow",isDocsHomePage:!1,title:"Getting Follows",description:"Check if a user is following a space or account",source:"@site/docs/sdk/quick-start/follow/GettingFollow.md",slug:"/sdk/quick-start/follow/getting-follow",permalink:"/docs/sdk/quick-start/follow/getting-follow",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/sdk/quick-start/follow/GettingFollow.md",version:"current",sidebar:"someSidebar",previous:{title:"Creating, Updating, And Deleting Reactions",permalink:"/docs/sdk/quick-start/reactions/creating-reactions"},next:{title:"Following And Unfollowing",permalink:"/docs/sdk/quick-start/follow/following"}},l=[{value:"Check if a user is following a space or account",id:"check-if-a-user-is-following-a-space-or-account",children:[{value:"isSpaceFollower",id:"isspacefollower",children:[]},{value:"isAccountFollower",id:"isaccountfollower",children:[]}]},{value:"Find and load a list of space followers",id:"find-and-load-a-list-of-space-followers",children:[{value:"spacesFollowedByAccount",id:"spacesfollowedbyaccount",children:[]},{value:"spaceFollowers",id:"spacefollowers",children:[]}]},{value:"Find and load the list of followers and followings",id:"find-and-load-the-list-of-followers-and-followings",children:[{value:"accountFollowers",id:"accountfollowers",children:[]},{value:"accountsFollowedByAccount",id:"accountsfollowedbyaccount",children:[]}]}],i={toc:l};function p(e){var t=e.components,o=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},i,o,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"check-if-a-user-is-following-a-space-or-account"},"Check if a user is following a space or account"),Object(a.b)("h3",{id:"isspacefollower"},"isSpaceFollower"),Object(a.b)("p",null,"This checks if an account is following a particular space."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"substrateApi.isSpaceFollower(myAddress: AnyAccountId, spaceId: AnySpaceId): Promise<boolean>\n")),Object(a.b)("p",null,"Example: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"const isFollower = await substrateApi.isSpaceFollower('3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8', idToBn('1'))\n")),Object(a.b)("h3",{id:"isaccountfollower"},"isAccountFollower"),Object(a.b)("p",null,"This checks if an account is following a particular account."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"SubstrateApi.isAccountFollower(myAddress: AnyAccountId, followedAddress: AnyAccountId): Promise<boolean>\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"const isFollower = await substrateApi.isAccountFollower('3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8', idToBn('1'))\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyaccountid"},"AnyAccountId"),": ",Object(a.b)("em",{parentName:"p"},"AccountId")," | ",Object(a.b)("em",{parentName:"p"},"string"))),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd78 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},Object(a.b)("em",{parentName:"a"},"SpaceId"))," | ",Object(a.b)("em",{parentName:"p"},"BN"))),Object(a.b)("h2",{id:"find-and-load-a-list-of-space-followers"},"Find and load a list of space followers"),Object(a.b)("h3",{id:"spacesfollowedbyaccount"},"spacesFollowedByAccount"),Object(a.b)("p",null,"Get an array of space IDs that an account is following."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"readyApi.query.spaceFollows.spacesFollowedByAccount(account: AccountId)\n")),Object(a.b)("p",null,"Example: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { Vec } from \"@polkadot/types\";\nimport { SpaceId as SubstrateSpaceId } from '@subsocial/types/substrate/interfaces'\nimport { bnsToIds } from '@subsocial/utils'\n\nconst res = await substrateApi.query.spaceFollows.spacesFollowedByAccount('3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8') as Vec<SubstrateSpaceId>\nconst followedSpaceIds = bnsToIds(res) // array of Space ids\n")),Object(a.b)("h3",{id:"spacefollowers"},"spaceFollowers"),Object(a.b)("p",null,"Get an array of account IDs that follow a space."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"readyApi.query.spaceFollows.spaceFollowers(spaceId: SpaceId)\n")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { GenericAccountId as SubstrateAccountId } from '@polkadot/types'\nimport { SubstrateId } from '@subsocial/types';\n\nconst res = await substrateApi.query.spaceFollows.spaceFollowers('1') as Vec<SubstrateAccountId>\nconst followersBySpaceId = bnsToIds(res as unknown as SubstrateId[]) // array of Account ids\n")),Object(a.b)("h2",{id:"find-and-load-the-list-of-followers-and-followings"},"Find and load the list of followers and followings"),Object(a.b)("h3",{id:"accountfollowers"},"accountFollowers"),Object(a.b)("p",null,"Get an array of account IDs that follow an account."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { GenericAccountId as SubstrateAccountId } from '@polkadot/types'\nimport { SubstrateId } from '@subsocial/types'\n\nconst res = await substrateApi.query.profileFollows.accountFollowers('3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8') as Vec<SubstrateAccountId>\nconst accountFollowersIds = bnsToIds(res as unknown as SubstrateId[])\n")),Object(a.b)("h3",{id:"accountsfollowedbyaccount"},"accountsFollowedByAccount"),Object(a.b)("p",null,"Get an array of account IDs that an account is following."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { GenericAccountId as SubstrateAccountId } from '@polkadot/types'\nimport { SubstrateId } from '@subsocial/types'\n\nconst res = await substrateApi.query.profileFollows.accountsFollowedByAccount('3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8') as Vec<SubstrateAccountId>\nconst accountsFollowedByAccountIds = bnsToIds(res as unknown as SubstrateId[])\n")))}p.isMDXComponent=!0}}]);