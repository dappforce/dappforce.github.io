"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[4008],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>f});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),p=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(a.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=o,f=d["".concat(a,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=g;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const i={id:"overview",title:"Overview",description:"A step-by-step guide for building a new extension on Light Grill.",keywords:["Extensions","Light Grill","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},l=void 0,s={unversionedId:"develop/zero-to-hero/extension/overview",id:"develop/zero-to-hero/extension/overview",title:"Overview",description:"A step-by-step guide for building a new extension on Light Grill.",source:"@site/docs/develop/zero-to-hero/extension/Overview.md",sourceDirName:"develop/zero-to-hero/extension",slug:"/develop/zero-to-hero/extension/overview",permalink:"/docs/develop/zero-to-hero/extension/overview",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/zero-to-hero/extension/Overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Overview",description:"A step-by-step guide for building a new extension on Light Grill.",keywords:["Extensions","Light Grill","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Grill Wordpress Integration",permalink:"/docs/develop/grill-chat/wordpress"},next:{title:"Setting Up Light Grill Locally",permalink:"/docs/develop/zero-to-hero/extension/setup"}},a={},p=[{value:"Components of an Extension",id:"components-of-an-extension",level:2},{value:"Building A URL Extension",id:"building-a-url-extension",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...i}=e;return(0,o.yg)(d,(0,r.A)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"In this section, we will cover how to create a new extension on top of the Light Grill app."),(0,o.yg)("p",null,"We will be building a new extension for URLs on top of the Light Grill app."),(0,o.yg)("h2",{id:"components-of-an-extension"},"Components of an Extension"),(0,o.yg)("p",null,"Each extension should have:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A very specific usecase / purpose, for example: sending NFTs or image from IPFS / URL, etc. "),(0,o.yg)("li",{parentName:"ul"},"A new JSON schema to be used in IPFS extending the ",(0,o.yg)("strong",{parentName:"li"},"ExtensionWidget")," class."),(0,o.yg)("li",{parentName:"ul"},"A utility class for serializing / de-serializing the JSON and implementing the preview renderer."),(0,o.yg)("li",{parentName:"ul"},"An input modal for users to enter data.")),(0,o.yg)("h2",{id:"building-a-url-extension"},"Building A URL Extension"),(0,o.yg)("p",null,"In this section, we will write an extension for attaching URLs with a chat message. This URLs extension powers the use case of sharing external endpoints like original sources, video links, portfolio websites, etc."),(0,o.yg)("p",null,"Here's how it will look in the chat:\n",(0,o.yg)("img",{alt:"URL Message",src:n(2218).A,width:"766",height:"276"})))}u.isMDXComponent=!0},2218:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/url-message-2da7e48ef2f718ed1e31efcca606347d.png"}}]);