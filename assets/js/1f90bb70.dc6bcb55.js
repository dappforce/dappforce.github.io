(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{163:function(t,e,a){"use strict";a.d(e,"a",(function(){return c})),a.d(e,"b",(function(){return u}));var s=a(0),n=a.n(s);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,s)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,s,n=function(t,e){if(null==t)return{};var a,s,n={},o=Object.keys(t);for(s=0;s<o.length;s++)a=o[s],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(s=0;s<o.length;s++)a=o[s],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var b=n.a.createContext({}),d=function(t){var e=n.a.useContext(b),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},c=function(t){var e=d(t.components);return n.a.createElement(b.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},m=n.a.forwardRef((function(t,e){var a=t.components,s=t.mdxType,o=t.originalType,r=t.parentName,b=i(t,["components","mdxType","originalType","parentName"]),c=d(a),m=s,u=c["".concat(r,".").concat(m)]||c[m]||p[m]||o;return a?n.a.createElement(u,l(l({ref:e},b),{},{components:a})):n.a.createElement(u,l({ref:e},b))}));function u(t,e){var a=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var o=a.length,r=new Array(o);r[0]=m;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l.mdxType="string"==typeof t?t:s,r[1]=l;for(var b=2;b<o;b++)r[b]=a[b];return n.a.createElement.apply(null,r)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},84:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return r})),a.d(e,"metadata",(function(){return l})),a.d(e,"toc",(function(){return i})),a.d(e,"default",(function(){return d}));var s=a(3),n=a(7),o=(a(0),a(163)),r={id:"posts-with-details",title:"Posts With Details"},l={unversionedId:"sdk/quick-start/posts/posts-with-details",id:"sdk/quick-start/posts/posts-with-details",isDocsHomePage:!1,title:"Posts With Details",description:"All entities (posts, profiles, and spaces) are interconnected. For faster data retrieval use",source:"@site/docs/sdk/quick-start/posts/PostWithDetails.md",slug:"/sdk/quick-start/posts/posts-with-details",permalink:"/docs/sdk/quick-start/posts/posts-with-details",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/sdk/quick-start/posts/PostWithDetails.md",version:"current",sidebar:"someSidebar",previous:{title:"Creating And Updating Posts",permalink:"/docs/sdk/quick-start/posts/creating-posts"},next:{title:"Getting Comments",permalink:"/docs/sdk/quick-start/comments/getting-comments"}},i=[{value:"Find and load a single post",id:"find-and-load-a-single-post",children:[{value:"findPostWithAllDetails",id:"findpostwithalldetails",children:[]},{value:"findPostWithSomeDetails",id:"findpostwithsomedetails",children:[]}]},{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",children:[{value:"findPostsWithAllDetails",id:"findpostswithalldetails",children:[]},{value:"findPublicPostsWithAllDetails",id:"findpublicpostswithalldetails",children:[]},{value:"findUnlistedPostsWithAllDetails",id:"findunlistedpostswithalldetails",children:[]},{value:"findPublicPostsWithSomeDetails",id:"findpublicpostswithsomedetails",children:[]}]}],b={toc:i};function d(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(o.b)("wrapper",Object(s.a)({},b,a,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"All entities (posts, profiles, and spaces) are interconnected. For faster data retrieval use\nthe ",Object(o.b)("inlineCode",{parentName:"p"},"findPostWithAllDetails")," method."),Object(o.b)("h2",{id:"find-and-load-a-single-post"},"Find and load a single post"),Object(o.b)("h3",{id:"findpostwithalldetails"},"findPostWithAllDetails"),Object(o.b)("p",null,"Finds and loads a post with their extension and the owner's profile and space (if defined)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPostWithAllDetails(id: AnyPostId): Promise<PostWithAllDetails | undefined>\n")),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithAllDetails('1')\n")),Object(o.b)("p",null,"Output:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": {"id": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8"...},\n  "space": {"id": "1"...}\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(o.b)("em",{parentName:"a"},"PostId"))," | ",Object(o.b)("em",{parentName:"p"},"BN"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(o.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(o.b)("em",{parentName:"a"},"PostWithSpace")))),Object(o.b)("h3",{id:"findpostwithsomedetails"},"findPostWithSomeDetails"),Object(o.b)("p",null,"Finds and loads a post with their extension and the owner's profile (if defined)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPostWithSomeDetails(query: FindPostWithDetailsQuery): Promise<PostWithSomeDetails | undefined>\n")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Properties"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"ids")),Object(o.b)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"visibility")),Object(o.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(o.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withContentOnly?")),Object(o.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withSpace?")),Object(o.b)("td",{parentName:"tr",align:null},"Pass ",Object(o.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withOwner?")),Object(o.b)("td",{parentName:"tr",align:null},"Pass ",Object(o.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(o.b)("p",null,"The four visible state filters correspond to the next conditions:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Filters"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"onlyVisible")),Object(o.b)("td",{parentName:"tr",align:null},"returns posts where the ",Object(o.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(o.b)("inlineCode",{parentName:"td"},"false"),".")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"onlyHidden")),Object(o.b)("td",{parentName:"tr",align:null},"returns posts where the ",Object(o.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(o.b)("inlineCode",{parentName:"td"},"true"),".")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"onlyPublic")),Object(o.b)("td",{parentName:"tr",align:null},"returns posts where the ",Object(o.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(o.b)("inlineCode",{parentName:"td"},"false")," and there is a corresponding JSON file on IPFS.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"onlyUnlisted")),Object(o.b)("td",{parentName:"tr",align:null},"returns posts where either the ",Object(o.b)("inlineCode",{parentName:"td"},"hidden")," field is ",Object(o.b)("inlineCode",{parentName:"td"},"true")," or there is no corresponding JSON file on IPFS.")))),Object(o.b)("p",null,"Example: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithSomeDetails({id: '1'})\n")),Object(o.b)("p",null,"Output: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": undefined,\n  "space": undefined\n}\n')),Object(o.b)("p",null,"Example with owner: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithSomeDetails({id: '1', withOwner: true})\n")),Object(o.b)("p",null,"Output: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": {"id": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8"...},\n  "space": undefined\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(o.b)("em",{parentName:"p"},"Exclude"),"<",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(o.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(o.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(o.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(o.b)("em",{parentName:"a"},"SpaceData"))," }")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostwithdetailsquery"},"FindPostWithDetailsQuery"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},Object(o.b)("em",{parentName:"a"},"FindPostQuery"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(o.b)("em",{parentName:"a"},"PostDetailsOpts"),"   "))),Object(o.b)("h2",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),Object(o.b)("h3",{id:"findpostswithalldetails"},"findPostsWithAllDetails"),Object(o.b)("p",null,"findPostsWithAllDetails returns information of the post, space and owner (profile)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPostsWithAllDetails(query: FindPostsQuery): Promise<PostWithAllDetails[]>\n")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Properties"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"ids")),Object(o.b)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"visibility")),Object(o.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(o.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withContentOnly?")),Object(o.b)("td",{parentName:"tr",align:null},"Boolean.")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},"FindPostsQuery"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstructs"},Object(o.b)("em",{parentName:"a"},"FindStructs"))," < ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(o.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(o.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(o.b)("em",{parentName:"a"},"PostWithSpace")))),Object(o.b)("p",null,"\ud83d\udc47 ",Object(o.b)("strong",{parentName:"p"},"There are also methods with ready-made visibility filters.")),Object(o.b)("h3",{id:"findpublicpostswithalldetails"},"findPublicPostsWithAllDetails"),Object(o.b)("p",null,"Find and load posts that have the ",Object(o.b)("inlineCode",{parentName:"p"},"hidden == false")," field in their Substrate struct and their IPFS content is\nnot empty, using their extension and the owner's profile and space (if defined)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPublicPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(o.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(o.b)("em",{parentName:"a"},"PostWithSpace")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(o.b)("em",{parentName:"a"},"PostId"))," | ",Object(o.b)("em",{parentName:"p"},"BN"))),Object(o.b)("h3",{id:"findunlistedpostswithalldetails"},"findUnlistedPostsWithAllDetails"),Object(o.b)("p",null,"Find and load posts that have the ",Object(o.b)("inlineCode",{parentName:"p"},"hidden == true")," field in their Substrate struct and their IPFS content is\nnot empty, using their extension and owner's profile and space (if defined)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findUnlistedPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(o.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(o.b)("em",{parentName:"a"},"PostWithSpace")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(o.b)("em",{parentName:"a"},"PostId"))," | ",Object(o.b)("em",{parentName:"p"},"BN"))),Object(o.b)("h3",{id:"findpublicpostswithsomedetails"},"findPublicPostsWithSomeDetails"),Object(o.b)("p",null,"Load an array of information about public posts with the space and/or owner."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPublicPostsWithSomeDetails(query: FindPostsWithDetailsQuery): Promise<PostWithSomeDetails[]\n")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Properties"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"ids")),Object(o.b)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"visibility")),Object(o.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(o.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withContentOnly?")),Object(o.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withSpace?")),Object(o.b)("td",{parentName:"tr",align:null},"Pass ",Object(o.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("em",{parentName:"td"},"withOwner?")),Object(o.b)("td",{parentName:"tr",align:null},"Pass ",Object(o.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostswithdetailsquery"},"FindPostsWithDetailsQuery"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},Object(o.b)("em",{parentName:"a"}," FindPostsQuery"))," & ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(o.b)("em",{parentName:"a"},"PostDetailsOpts")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(o.b)("em",{parentName:"p"},"Exclude"),"<",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(o.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(o.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(o.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(o.b)("em",{parentName:"a"},"SpaceData"))," }")))}d.isMDXComponent=!0}}]);