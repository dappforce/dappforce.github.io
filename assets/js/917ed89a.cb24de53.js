"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[8735],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>w});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(r),w=o,f=u["".concat(c,".").concat(w)]||u[w]||d[w]||a;return r?n.createElement(f,p(p({ref:t},l),{},{components:r})):n.createElement(f,p({ref:t},l))}));function w(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,p[1]=i;for(var s=2;s<a;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},77:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(3117),o=(r(7294),r(3905));const a={id:"creating-tweet",title:"Creating a Tweet",displayed_sidebar:"developSidebar"},p=void 0,i={unversionedId:"develop/zero-to-hero/twitter-dapp/creating-tweet",id:"develop/zero-to-hero/twitter-dapp/creating-tweet",title:"Creating a Tweet",description:"To post a new tweet, we need to have a space. For the purpose of this tutorial, I created a new space using our Playground.",source:"@site/docs/develop/zero-to-hero/twitter-dapp/CreatingTweet.md",sourceDirName:"develop/zero-to-hero/twitter-dapp",slug:"/develop/zero-to-hero/twitter-dapp/creating-tweet",permalink:"/docs/develop/zero-to-hero/twitter-dapp/creating-tweet",draft:!1,editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/zero-to-hero/twitter-dapp/CreatingTweet.md",tags:[],version:"current",frontMatter:{id:"creating-tweet",title:"Creating a Tweet",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Home Screen UI",permalink:"/docs/develop/zero-to-hero/twitter-dapp/home-screen-ui"},next:{title:"Fetching Tweets",permalink:"/docs/develop/zero-to-hero/twitter-dapp/fetching-tweet"}},c={},s=[],l={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To post a new tweet, we need to have a space. For the purpose of this tutorial, I created a new space using our ",(0,o.kt)("a",{parentName:"p",href:"https://play.subsocial.network/writing-data/space/create"},"Playground"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Space ID: 1059")),(0,o.kt)("p",null,"Now, Let's rewrite the ",(0,o.kt)("strong",{parentName:"p"},"onTweetBtnClick")," method of ",(0,o.kt)("strong",{parentName:"p"},"src/components/tweet-box.tsx"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"  import {\n    IpfsContent\n  } from '@subsocial/api/substrate/wrappers'\n\n  ...\n\n  const SPACE_ID = '1059'\n  const ACCOUNT_STORAGE_KEY = 'connected_account'\n\n  const TweetBox: React.FC = () => {\n    const [tweetData, setTweet] = useState('');\n\n    const { api } = useContext(SubsocialContext)\n\n    const onTweetBtnClick = async () => {\n      if (!api) return;\n\n      setTweet('')\n      const accountAddress = localStorage.getItem(ACCOUNT_STORAGE_KEY) ?? ''\n\n      const cid = await api.ipfs.saveContent({\n        title: accountAddress,\n        body: tweetData,\n      })\n\n      const substrateApi = await api.substrateApi\n      const postTransaction = substrateApi.tx.posts.createPost(\n        SPACE_ID,\n        { RegularPost: null }, // Creates a regular post.\n        IpfsContent(cid)\n      )\n      await polkadotjs.signAndSendTx(postTransaction, accountAddress, logTransaction)\n    }\n\n  ...\n")))}d.isMDXComponent=!0}}]);