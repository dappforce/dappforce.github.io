(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(3),i=n(7),r=(n(0),n(143)),o={id:"advanced",title:"Advanced"},l={unversionedId:"sdk/advanced",id:"sdk/advanced",isDocsHomePage:!1,title:"Advanced",description:"Subsocial api has additional methods without flat wrapper.",source:"@site/docs/sdk/Advanced.md",slug:"/sdk/advanced",permalink:"/docs/sdk/advanced",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/sdk/Advanced.md",version:"current",sidebar:"someSidebar",previous:{title:"Following and unfollowing",permalink:"/docs/sdk/quick-start/follow/following"},next:{title:"FAQ",permalink:"/docs/faq/overview"}},s=[{value:"Spaces",id:"spaces",children:[{value:"Find and load an array of spaces",id:"find-and-load-an-array-of-spaces",children:[]}]},{value:"Posts",id:"posts",children:[{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",children:[]}]}],c={toc:s};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Subsocial api has additional methods without flat wrapper."),Object(r.b)("h2",{id:"spaces"},Object(r.b)("a",{parentName:"h2",href:"/docs/sdk/quick-start/spaces/overview"},"Spaces")),Object(r.b)("h3",{id:"find-and-load-an-array-of-spaces"},"Find and load an array of spaces"),Object(r.b)("h4",{id:"findspaces"},"findSpaces"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"flatApi.subsocial.findSpaces(filter: FindSpacesQuery): Promise<SpaceData[]>\n")),Object(r.b)("p",null,"Example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findSpaces({ \n  ids: [ '1', '1354', '1573', '1599', '1040'],\n  visibility: \"onlyVisible\",\n})\n")),Object(r.b)("p",null,"Properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"ids")," - An array of ids of desired structs."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"visibility")," - Filter for visible state of the structs (see ",Object(r.b)("a",{parentName:"li",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"withContentOnly?")," - Boolean.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'"),Object(r.b)("p",{parentName:"blockquote"},"The four visible state filters correspond to the next conditions:"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyVisible")," \u2013 returns spaces where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyHidden")," \u2013 returns spaces where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyPublic")," \u2013 returns spaces where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"\nand there is a corresponding JSON file on IPFS."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyUnlisted")," \u2013 returns spaces where either the ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field is ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"\nor there is a no corresponding JSON file on IPFS."))),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(r.b)("em",{parentName:"a"},"CommonData"))," < ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(r.b)("em",{parentName:"a"},"Space")),", ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(r.b)("em",{parentName:"a"},"SpaceContent"))," >")),Object(r.b)("h2",{id:"posts"},Object(r.b)("a",{parentName:"h2",href:"/docs/sdk/quick-start/posts/overview"},"Posts")),Object(r.b)("h3",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"flatApi.subsocial.findPosts(filter: FindPostsQuery): Promise<PostData[]>\n")),Object(r.b)("p",null,"Example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"flatApi.subsocial.findPosts({ \n  ids: [ '1', '9', '32'],\n  visibility: 'onlyVisible',\n})\n")),Object(r.b)("p",null,"Properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"ids")," - An array of ids of desired structs."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"visibility")," - Filter for visible state of the structs (see ",Object(r.b)("a",{parentName:"li",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"withContentOnly?"),"- Boolean.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(r.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'"),Object(r.b)("p",{parentName:"blockquote"},"The four visible state filters correspond to the next conditions:"),Object(r.b)("ul",{parentName:"blockquote"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyVisible")," \u2013 returns posts where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyHidden")," \u2013 returns posts where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyPublic")," \u2013 returns posts where ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field on corresponding Substrate struct is ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"\nand there is a corresponding JSON file on IPFS."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"onlyUnlisted")," \u2013 returns posts where either the ",Object(r.b)("inlineCode",{parentName:"li"},"hidden")," field is ",Object(r.b)("inlineCode",{parentName:"li"},"true"),"\nor there is a no corresponding JSON file on IPFS."))))}b.isMDXComponent=!0},143:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),b=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=b(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||p[u]||r;return n?i.a.createElement(m,l(l({ref:t},c),{},{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);