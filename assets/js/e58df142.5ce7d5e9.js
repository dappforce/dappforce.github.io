"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[7080],{5788:(e,n,t)=>{t.d(n,{Iu:()=>d,yg:()=>f});var o=t(1504);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),c=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(a.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(a,".").concat(m)]||u[m]||p[m]||l;return t?o.createElement(f,i(i({ref:n},d),{},{components:t})):o.createElement(f,i({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=m;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<l;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},212:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=t(5072),r=(t(1504),t(5788));const l={id:"modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Light Grill.",keywords:["Schema","Extensions","Light Grill","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},i=void 0,s={unversionedId:"develop/zero-to-hero/extension/modal",id:"develop/zero-to-hero/extension/modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Light Grill.",source:"@site/docs/develop/zero-to-hero/extension/Modal.md",sourceDirName:"develop/zero-to-hero/extension",slug:"/develop/zero-to-hero/extension/modal",permalink:"/docs/develop/zero-to-hero/extension/modal",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/zero-to-hero/extension/Modal.md",tags:[],version:"current",frontMatter:{id:"modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Light Grill.",keywords:["Schema","Extensions","Light Grill","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Defining The Schema",permalink:"/docs/develop/zero-to-hero/extension/schema"},next:{title:"Adding An Extension To The Registry",permalink:"/docs/develop/zero-to-hero/extension/registry"}},a={},c=[{value:"Creating UrlModal.tsx file",id:"creating-urlmodaltsx-file",level:2}],d={toc:c},u="wrapper";function p(e){let{components:n,...l}=e;return(0,r.yg)(u,(0,o.c)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"This section covers how to create an input modal for the extension that we just created for URLs."),(0,r.yg)("h2",{id:"creating-urlmodaltsx-file"},"Creating UrlModal.tsx file"),(0,r.yg)("p",null,"We need to create another file inside the ",(0,r.yg)("inlineCode",{parentName:"p"},"components/Extensions/url")," directory."),(0,r.yg)("p",null,"The first thing we need to create is a component that renders the input fields and two action buttons (for send and cancel). Like this:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Url Modal",src:t(6548).c,width:"1028",height:"666"})),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'\nimport useExtensionsStore from "@/stores/extensions"\nimport { useState } from "react"\nimport { UrlExtension } from "./UrlExtension"\nimport useModalStore from "@/stores/modal"\nimport CancelIcon from \'@/assets/icons/cancel.svg\'\n\nconst inputClass = "input input-bordered w-full mt-1 focus:outline-indigo-800 focus:outline-offset-0"\n\nconst URLModal = () => {\n  const [url, setURL] = useState<string>(\'\')\n  const [title, setTitle] = useState<string>(\'\')\n\n  const { closeModal } = useModalStore()\n\n  const sendURL = () => {  }\n\n  const close = () => {\n    setTitle(\'\')\n    setURL(\'\')\n    closeModal()\n  }\n\n  return <div>\n    <div className="flex justify-between">\n      <h3 className="font-bold text-lg">Attach URL</h3>\n      <button\n        onClick={close}\n        className="p-1 rounded-full transition bg-transparent disabled:hover:ring-0 disabled:ring-offset-0 hover:ring-2 focus-visible:!ring-2 focus-visible:outline-none inline-block text-center absolute right-6 m-1 mr-0 text-2xl text-text-muted"\n      >\n        <CancelIcon />\n      </button>\n    </div>\n\n    <div className="mt-4">\n      <h2>External URL</h2>\n      <input type="text" className={inputClass} value={url} onChange={(e) => setURL(e.target.value)} placeholder="Paste your external URL" />\n    </div>\n\n    <div className="mt-4">\n      <h2>Title</h2>\n      <input type="text" className={inputClass} value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Any title for the URL" />\n    </div>\n\n    <div className="modal-action">\n      <label onClick={sendURL} className="btn w-full font-normal normal-case hover:bg-indigo-800 hover:border-indigo-800 rounded-3xl">Add</label>\n    </div>\n  </div>\n}\n\nexport default URLModal\n\n')),(0,r.yg)("p",null,"Now we need to import Redux Store to add the logics, like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"\n  const URLModal = () => {\n    ...\n    \n    const { addExtension } = useExtensionsStore()\n\n    const sendURL = () => {\n      if (url.trim() == '' && title.trim() == '') return;\n\n      const urlExt = new UrlExtension({ title, value: url })\n      addExtension(urlExt)\n      close()\n      return;\n    }\n\n    ...\n\n  }\n\n")),(0,r.yg)("p",null,"Here's the full code for ",(0,r.yg)("strong",{parentName:"p"},"UrlModal.tsx")," file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'\nimport useExtensionsStore from "@/stores/extensions"\nimport { useState } from "react"\nimport { UrlExtension } from "./UrlExtension"\nimport useModalStore from "@/stores/modal"\nimport CancelIcon from \'@/assets/icons/cancel.svg\'\n\nconst inputClass = "input input-bordered w-full mt-1 focus:outline-indigo-800 focus:outline-offset-0"\n\nconst URLModal = () => {\n\n  const [url, setURL] = useState<string>(\'\')\n  const [title, setTitle] = useState<string>(\'\')\n\n  const { closeModal } = useModalStore()\n  const { addExtension } = useExtensionsStore()\n\n  const sendURL = () => {\n    if (url.trim() == \'\' && title.trim() == \'\') return;\n\n    const urlExt = new UrlExtension({ title, value: url })\n    addExtension(urlExt)\n    close()\n    return;\n  }\n\n  const close = () => {\n    setTitle(\'\')\n    setURL(\'\')\n    closeModal()\n  }\n\n  return <div>\n    <div className="flex justify-between">\n      <h3 className="font-bold text-lg">Attach URL</h3>\n      <button\n        onClick={close}\n        className="p-1 rounded-full transition bg-transparent disabled:hover:ring-0 disabled:ring-offset-0 hover:ring-2 focus-visible:!ring-2 focus-visible:outline-none inline-block text-center absolute right-6 m-1 mr-0 text-2xl text-text-muted"\n      >\n        <CancelIcon />\n      </button>\n    </div>\n\n    <div className="mt-4">\n      <h2>External URL</h2>\n      <input type="text" className={inputClass} value={url} onChange={(e) => setURL(e.target.value)} placeholder="Paste your external URL" />\n    </div>\n\n    <div className="mt-4">\n      <h2>Title</h2>\n      <input type="text" className={inputClass} value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Any title for the URL" />\n    </div>\n\n    <div className="modal-action">\n      <label onClick={sendURL} className="btn w-full font-normal normal-case hover:bg-indigo-800 hover:border-indigo-800 rounded-3xl">Add</label>\n    </div>\n  </div>\n}\n\nexport default URLModal\n\n')),(0,r.yg)("p",null,"Awesome, now we just need to add our newly created extension to the registry."))}p.isMDXComponent=!0},6548:(e,n,t)=>{t.d(n,{c:()=>o});const o=t.p+"assets/images/url-modal-2138feba5b293e21fe400fca1a9b7d1b.jpg"}}]);