"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[1006],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var a=o.createContext({}),c=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=l,f=p["".concat(a,".").concat(m)]||p[m]||u[m]||r;return n?o.createElement(f,i(i({ref:t},d),{},{components:n})):o.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=p;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(3117),l=(n(7294),n(3905));const r={id:"modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Grill Light.",keywords:["Schema","Extensions","Grill Light","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},i=void 0,s={unversionedId:"develop/grill-light/extension/modal",id:"develop/grill-light/extension/modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Grill Light.",source:"@site/docs/develop/grill-light/extension/Modal.md",sourceDirName:"develop/grill-light/extension",slug:"/develop/grill-light/extension/modal",permalink:"/docs/develop/grill-light/extension/modal",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/grill-light/extension/Modal.md",tags:[],version:"current",frontMatter:{id:"modal",title:"Creating An Input Modal",description:"This section explains about the input modal required for the extension of Grill Light.",keywords:["Schema","Extensions","Grill Light","Building on the Grill app","Web3 Social","Blockchain","Subsocial"],displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Defining The Schema",permalink:"/docs/develop/grill-light/extension/schema"},next:{title:"Adding An Extension To The Registry",permalink:"/docs/develop/grill-light/extension/registry"}},a={},c=[{value:"Creating UrlModal.tsx file",id:"creating-urlmodaltsx-file",level:2}],d={toc:c};function u(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This section covers how to create an input modal for the extension that we just created for URLs."),(0,l.kt)("h2",{id:"creating-urlmodaltsx-file"},"Creating UrlModal.tsx file"),(0,l.kt)("p",null,"We need to create another file inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"components/Extensions/url")," directory."),(0,l.kt)("p",null,"The first thing we need to create is a component that renders the input fields and two action buttons (for send and cancel). Like this:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Url Modal",src:n(3325).Z,width:"1028",height:"666"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'\nimport useExtensionsStore from "@/stores/extensions"\nimport { useState } from "react"\nimport { UrlExtension } from "./UrlExtension"\nimport useModalStore from "@/stores/modal"\nimport CancelIcon from \'@/assets/icons/cancel.svg\'\n\nconst inputClass = "input input-bordered w-full mt-1 focus:outline-indigo-800 focus:outline-offset-0"\n\nconst URLModal = () => {\n  const [url, setURL] = useState<string>(\'\')\n  const [title, setTitle] = useState<string>(\'\')\n\n  const { closeModal } = useModalStore()\n\n  const sendURL = () => {  }\n\n  const close = () => {\n    setTitle(\'\')\n    setURL(\'\')\n    closeModal()\n  }\n\n  return <div>\n    <div className="flex justify-between">\n      <h3 className="font-bold text-lg">Attach URL</h3>\n      <button\n        onClick={close}\n        className="p-1 rounded-full transition bg-transparent disabled:hover:ring-0 disabled:ring-offset-0 hover:ring-2 focus-visible:!ring-2 focus-visible:outline-none inline-block text-center absolute right-6 m-1 mr-0 text-2xl text-text-muted"\n      >\n        <CancelIcon />\n      </button>\n    </div>\n\n    <div className="mt-4">\n      <h2>External URL</h2>\n      <input type="text" className={inputClass} value={url} onChange={(e) => setURL(e.target.value)} placeholder="Paste your external URL" />\n    </div>\n\n    <div className="mt-4">\n      <h2>Title</h2>\n      <input type="text" className={inputClass} value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Any title for the URL" />\n    </div>\n\n    <div className="modal-action">\n      <label onClick={sendURL} className="btn w-full font-normal normal-case hover:bg-indigo-800 hover:border-indigo-800 rounded-3xl">Add</label>\n    </div>\n  </div>\n}\n\nexport default URLModal\n\n')),(0,l.kt)("p",null,"Now we need to import Redux Store to add the logics, like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"\n  const URLModal = () => {\n    ...\n    \n    const { addExtension } = useExtensionsStore()\n\n    const sendURL = () => {\n      if (url.trim() == '' && title.trim() == '') return;\n\n      const urlExt = new UrlExtension({ title, value: url })\n      addExtension(urlExt)\n      close()\n      return;\n    }\n\n    ...\n\n  }\n\n")),(0,l.kt)("p",null,"Here's the full code for Modal file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'\nimport useExtensionsStore from "@/stores/extensions"\nimport { useState } from "react"\nimport { UrlExtension } from "./UrlExtension"\nimport useModalStore from "@/stores/modal"\nimport CancelIcon from \'@/assets/icons/cancel.svg\'\n\nconst inputClass = "input input-bordered w-full mt-1 focus:outline-indigo-800 focus:outline-offset-0"\n\nconst URLModal = () => {\n\n  const [url, setURL] = useState<string>(\'\')\n  const [title, setTitle] = useState<string>(\'\')\n\n  const { closeModal } = useModalStore()\n  const { addExtension } = useExtensionsStore()\n\n  const sendURL = () => {\n    if (url.trim() == \'\' && title.trim() == \'\') return;\n\n    const urlExt = new UrlExtension({ title, value: url })\n    addExtension(urlExt)\n    close()\n    return;\n  }\n\n  const close = () => {\n    setTitle(\'\')\n    setURL(\'\')\n    closeModal()\n  }\n\n  return <div>\n    <div className="flex justify-between">\n      <h3 className="font-bold text-lg">Attach URL</h3>\n      <button\n        onClick={close}\n        className="p-1 rounded-full transition bg-transparent disabled:hover:ring-0 disabled:ring-offset-0 hover:ring-2 focus-visible:!ring-2 focus-visible:outline-none inline-block text-center absolute right-6 m-1 mr-0 text-2xl text-text-muted"\n      >\n        <CancelIcon />\n      </button>\n    </div>\n\n    <div className="mt-4">\n      <h2>External URL</h2>\n      <input type="text" className={inputClass} value={url} onChange={(e) => setURL(e.target.value)} placeholder="Paste your external URL" />\n    </div>\n\n    <div className="mt-4">\n      <h2>Title</h2>\n      <input type="text" className={inputClass} value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Any title for the URL" />\n    </div>\n\n    <div className="modal-action">\n      <label onClick={sendURL} className="btn w-full font-normal normal-case hover:bg-indigo-800 hover:border-indigo-800 rounded-3xl">Add</label>\n    </div>\n  </div>\n}\n\nexport default URLModal\n\n')),(0,l.kt)("p",null,"Awesome, now we just need to add our newly created extension to the registry."))}u.isMDXComponent=!0},3325:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/url-modal-2138feba5b293e21fe400fca1a9b7d1b.jpg"}}]);