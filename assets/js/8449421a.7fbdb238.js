(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{124:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return d}));var s=a(3),n=a(7),l=(a(0),a(171)),b={id:"posts",title:"Posts"},o={unversionedId:"develop/sdk/advanced/posts",id:"develop/sdk/advanced/posts",isDocsHomePage:!1,title:"Posts",description:"Find and load a single post",source:"@site/docs/develop/sdk/advanced/Posts.md",slug:"/develop/sdk/advanced/posts",permalink:"/docs/develop/sdk/advanced/posts",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/sdk/advanced/Posts.md",version:"current"},i=[{value:"Find and load a single post",id:"find-and-load-a-single-post",children:[{value:"findPost",id:"findpost",children:[]},{value:"findPostWithAllDetails",id:"findpostwithalldetails",children:[]},{value:"findPostWithSomeDetails",id:"findpostwithsomedetails",children:[]}]},{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",children:[{value:"findAllPosts",id:"findallposts",children:[]},{value:"findPosts",id:"findposts",children:[]},{value:"findPostsWithAllDetails",id:"findpostswithalldetails",children:[]},{value:"findPostsWithSomeDetails",id:"findpostswithsomedetails",children:[]},{value:"findPublicPostsWithAllDetails",id:"findpublicpostswithalldetails",children:[]},{value:"findPublicPostsWithSomeDetails",id:"findpublicpostswithsomedetails",children:[]},{value:"findUnlistedPosts",id:"findunlistedposts",children:[]},{value:"findUnlistedPostsWithAllDetails",id:"findunlistedpostswithalldetails",children:[]},{value:"findUnlistedPostsWithSomeDetails",id:"findunlistedpostswithsomedetails",children:[]}]}],r={toc:i};function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(s.a)({},r,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"find-and-load-a-single-post"},"Find and load a single post"),Object(l.b)("h3",{id:"findpost"},"findPost"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPost(query: FindPostQuery): Promise<PostData | undefined>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPost({id: '1'})\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"id")),Object(l.b)("td",{parentName:"tr",align:null},"ID of the desired struct.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),").")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(l.b)("em",{parentName:"a"},"CommonData"))," < ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(l.b)("em",{parentName:"a"},"Post")),", ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(l.b)("em",{parentName:"a"},"PostContent"))," >")),Object(l.b)("h3",{id:"findpostwithalldetails"},"findPostWithAllDetails"),Object(l.b)("p",null,"Finds and loads a post with their extension, and the owner's profile and space (if defined)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPostWithAllDetails(id: AnyPostId): Promise<PostWithAllDetails | undefined>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPostWithAllDetails('1')\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(l.b)("em",{parentName:"a"},"PostId"))," | ",Object(l.b)("em",{parentName:"p"},"BN"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(l.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(l.b)("em",{parentName:"a"},"PostWithSpace")))),Object(l.b)("h3",{id:"findpostwithsomedetails"},"findPostWithSomeDetails"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPostWithSomeDetails(query: FindPostWithDetailsQuery): Promise<PostWithSomeDetails | undefined>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPostWithAllDetails('1')\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"id")),Object(l.b)("td",{parentName:"tr",align:null},"ID of desired struct.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withSpace?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withOwner?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(l.b)("em",{parentName:"p"},"Exclude"),"<",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(l.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(l.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(l.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(l.b)("em",{parentName:"a"},"SpaceData"))," }")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostwithdetailsquery"},"FindPostWithDetailsQuery"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},Object(l.b)("em",{parentName:"a"},"FindPostQuery"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(l.b)("em",{parentName:"a"},"PostDetailsOpts"),"   "))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(l.b)("h2",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),Object(l.b)("h3",{id:"findallposts"},"findAllPosts"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findAllPosts(ids: AnyPostId[]): Promise<PostData[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findAllPosts([ '1' ])\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(l.b)("em",{parentName:"a"},"PostId"))," | ",Object(l.b)("em",{parentName:"p"},"BN"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(l.b)("em",{parentName:"a"},"CommonData"))," < ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(l.b)("em",{parentName:"a"},"Post")),", ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(l.b)("em",{parentName:"a"},"PostContent"))," >")),Object(l.b)("h3",{id:"findposts"},"findPosts"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPosts(query: FindPostsQuery): Promise<PostData[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-javascript"},"flatApi.subsocial.findPosts({\n  ids: [ '1', '9', '32' ],\n  visibility: 'onlyVisible',\n})\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"ids")),Object(l.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),").")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(l.b)("p",null,"The four visible state filters correspond to these conditions:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Filters"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyVisible")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"false"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyHidden")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"true"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyPublic")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"false")," and there is a corresponding JSON file on IPFS.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyUnlisted")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where either the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field is ",Object(l.b)("inlineCode",{parentName:"td"},"true")," or there is no corresponding JSON file on IPFS.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(l.b)("em",{parentName:"a"},"CommonData"))," < ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(l.b)("em",{parentName:"a"},"Post")),", ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(l.b)("em",{parentName:"a"},"PostContent"))," >")),Object(l.b)("h3",{id:"findpostswithalldetails"},"findPostsWithAllDetails"),Object(l.b)("p",null,"Finds and loads a posts with their extension, and the owner's profile and space (if defined)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPostsWithAllDetails(query: FindPostsQuery): Promise<PostWithAllDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPostsWithAllDetails({\n  ids: [ '1' ], \n  visibility: 'onlyVisible'\n})\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"ids")),Object(l.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(l.b)("p",null,"The four visible state filters correspond to the next conditions:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Filters"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyVisible")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"false"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyHidden")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"true"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyPublic")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",Object(l.b)("inlineCode",{parentName:"td"},"false")," and there is a corresponding JSON file on IPFS.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"onlyUnlisted")),Object(l.b)("td",{parentName:"tr",align:null},"Returns posts where either the ",Object(l.b)("inlineCode",{parentName:"td"},"hidden")," field is ",Object(l.b)("inlineCode",{parentName:"td"},"true")," or there is no corresponding JSON file on IPFS.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},"FindPostsQuery"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstructs"},Object(l.b)("em",{parentName:"a"},"FindStructs"))," < ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(l.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(l.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(l.b)("em",{parentName:"a"},"PostWithSpace")))),Object(l.b)("h3",{id:"findpostswithsomedetails"},"findPostsWithSomeDetails"),Object(l.b)("p",null,"Finds and loads posts with their extension, and the owner's profile and and space (if defined and specified in properties)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPostsWithSomeDetails(query: FindPostsWithDetailsQuery): Promise<PostWithSomeDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPostsWithSomeDetails({\n  id: '1',\n  withOwner: true\n}): Promise<PostWithSomeDetails[]>\n\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"ids")),Object(l.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withSpace?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withOwner?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(l.b)("em",{parentName:"p"},"Exclude"),"<",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(l.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(l.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(l.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(l.b)("em",{parentName:"a"},"SpaceData"))," }")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostwithdetailsquery"},"FindPostWithDetailsQuery"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},Object(l.b)("em",{parentName:"a"},"FindPostQuery"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(l.b)("em",{parentName:"a"},"PostDetailsOpts"),"   "))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(l.b)("h3",{id:"findpublicpostswithalldetails"},"findPublicPostsWithAllDetails"),Object(l.b)("p",null,"Finds and loads posts that have the ",Object(l.b)("inlineCode",{parentName:"p"},"hidden == false")," field in the Substrate struct, and their IPFS content is not empty, with their extension, and the owner's profile and space (if defined)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPublicPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPublicPostsWithAllDetails(['1'])\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(l.b)("em",{parentName:"a"},"PostId"))," | ",Object(l.b)("em",{parentName:"p"},"BN"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(l.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(l.b)("em",{parentName:"a"},"PostWithSpace")))),Object(l.b)("h3",{id:"findpublicpostswithsomedetails"},"findPublicPostsWithSomeDetails"),Object(l.b)("p",null,"Finds and loads posts that have the ",Object(l.b)("inlineCode",{parentName:"p"},"hidden == false")," field in the Substrate struct and their IPFS content is not empty, with their extension, and the owner's profile and space (if defined and specified in properties)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findPublicPostsWithSomeDetails(query: FindPostsWithDetailsQuery): Promise<PostWithSomeDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPublicPostsWithSomeDetails({\n  id: '1',\n  withOwner: true\n}): Promise<PostWithSomeDetails[]>\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"ids")),Object(l.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withSpace?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withOwner?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(l.b)("em",{parentName:"p"},"Exclude"),"<",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(l.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(l.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(l.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(l.b)("em",{parentName:"a"},"SpaceData"))," }")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostwithdetailsquery"},"FindPostWithDetailsQuery"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},Object(l.b)("em",{parentName:"a"},"FindPostQuery"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(l.b)("em",{parentName:"a"},"PostDetailsOpts"),"   "))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(l.b)("h3",{id:"findunlistedposts"},"findUnlistedPosts"),Object(l.b)("p",null,"Finds and loads an array of information about unlisted posts from the Subsocial blockchain and IPFS by a given array of post ",Object(l.b)("inlineCode",{parentName:"p"},"ids"),"."),Object(l.b)("p",null,"A post is considered unlisted if it meets either of these conditions:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"hidden")," field on it's blockchain structure is ",Object(l.b)("inlineCode",{parentName:"li"},"true"),"."),Object(l.b)("li",{parentName:"ul"},"Or there is no corresponding JSON file that represents the post's content on IPFS.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocia.findUnlistedPosts(ids: AnyPostId[]): Promise<PostData[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocia.findUnlistedPosts(['1'])\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(l.b)("em",{parentName:"a"},"PostId"))," | ",Object(l.b)("em",{parentName:"p"},"BN"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(l.b)("em",{parentName:"a"},"CommonData"))," < ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(l.b)("em",{parentName:"a"},"Post")),", ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(l.b)("em",{parentName:"a"},"PostContent"))," >")),Object(l.b)("h3",{id:"findunlistedpostswithalldetails"},"findUnlistedPostsWithAllDetails"),Object(l.b)("p",null,"Finds and loads posts that have the ",Object(l.b)("inlineCode",{parentName:"p"},"hidden == true")," field in the Substrate struct and their IPFS content is not empty, with their extension, and the owner's profile and space (if defined)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findUnlistedPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findUnlistedPostsWithAllDetails(['1'])\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},"AnyPostId"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},Object(l.b)("em",{parentName:"a"},"PostId"))," | ",Object(l.b)("em",{parentName:"p"},"BN"))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithalldetails"},"PostWithAllDetails"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithowner"},Object(l.b)("em",{parentName:"a"},"PostWithOwner"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithspace"},Object(l.b)("em",{parentName:"a"},"PostWithSpace")))),Object(l.b)("h3",{id:"findunlistedpostswithsomedetails"},"findUnlistedPostsWithSomeDetails"),Object(l.b)("p",null,"Finds and loads posts that have the' hidden == true' field in the Substrate struct and their IPFS content is not empty, with their extension, and owner's profile and space (if defined and specified in properties)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"flatApi.subsocial.findUnlistedPostsWithSomeDetails(query: FindPostsWithDetailsQuery): Promise<PostWithSomeDetails[]>\n")),Object(l.b)("p",null,"Example:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findUnlistedPostsWithSomeDetails({\n  ids: ['1'],\n  withOwner: true\n}): Promise<PostWithSomeDetails[]>\n")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Properties"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"ids")),Object(l.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"visibility")),Object(l.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(l.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),")")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withContentOnly?")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withSpace?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the space data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("em",{parentName:"td"},"withOwner?")),Object(l.b)("td",{parentName:"tr",align:null},"Pass ",Object(l.b)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},"PostWithSomeDetails"),": { ext?: ",Object(l.b)("em",{parentName:"p"},"Exclude"),"<",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postwithsomedetails"},Object(l.b)("em",{parentName:"a"},"PostWithSomeDetails")),', "ext">; owner?: ',Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#profiledata"},Object(l.b)("em",{parentName:"a"},"ProfileData")),"; post: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},Object(l.b)("em",{parentName:"a"},"PostData")),"; space?: ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},Object(l.b)("em",{parentName:"a"},"SpaceData"))," }")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostswithdetailsquery"},"FindPostsWithDetailsQuery"),": ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},Object(l.b)("em",{parentName:"a"}," FindPostsQuery"))," & ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postdetailsopts"},Object(l.b)("em",{parentName:"a"},"PostDetailsOpts")))),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(l.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")))}d.isMDXComponent=!0},171:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return j}));var s=a(0),n=a.n(s);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},l=Object.keys(e);for(s=0;s<l.length;s++)a=l[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(s=0;s<l.length;s++)a=l[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var r=n.a.createContext({}),d=function(e){var t=n.a.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.a.createElement(r.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,s=e.mdxType,l=e.originalType,b=e.parentName,r=i(e,["components","mdxType","originalType","parentName"]),c=d(a),m=s,j=c["".concat(b,".").concat(m)]||c[m]||p[m]||l;return a?n.a.createElement(j,o(o({ref:t},r),{},{components:a})):n.a.createElement(j,o({ref:t},r))}));function j(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var l=a.length,b=new Array(l);b[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:s,b[1]=o;for(var r=2;r<l;r++)b[r]=a[r];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);