"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[8735],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},w=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(n),w=o,f=d["".concat(s,".").concat(w)]||d[w]||u[w]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=w;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}w.displayName="MDXCreateElement"},77:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={id:"creating-tweet",title:"Creating a Tweet",displayed_sidebar:"developSidebar"},i=void 0,p={unversionedId:"develop/zero-to-hero/twitter-dapp/creating-tweet",id:"develop/zero-to-hero/twitter-dapp/creating-tweet",title:"Creating a Tweet",description:"To post a new tweet, we need to have a space. For the purpose of this tutorial, I created a new space using our Playground.",source:"@site/docs/develop/zero-to-hero/twitter-dapp/CreatingTweet.md",sourceDirName:"develop/zero-to-hero/twitter-dapp",slug:"/develop/zero-to-hero/twitter-dapp/creating-tweet",permalink:"/docs/develop/zero-to-hero/twitter-dapp/creating-tweet",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/zero-to-hero/twitter-dapp/CreatingTweet.md",tags:[],version:"current",frontMatter:{id:"creating-tweet",title:"Creating a Tweet",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Home Screen UI",permalink:"/docs/develop/zero-to-hero/twitter-dapp/home-screen-ui"},next:{title:"Fetching Tweets",permalink:"/docs/develop/zero-to-hero/twitter-dapp/fetching-tweet"}},s={},c=[],l={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To post a new tweet, we need to have a space. For the purpose of this tutorial, I created a new space using our ",(0,o.kt)("a",{parentName:"p",href:"https://play.subsocial.network/writing-data/space/create"},"Playground"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Space ID: 1059")),(0,o.kt)("p",null,"Now, Let's rewrite the ",(0,o.kt)("strong",{parentName:"p"},"onTweetBtnClick")," method of ",(0,o.kt)("strong",{parentName:"p"},"src/components/tweet-box.tsx"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"  import {\n    IpfsContent\n  } from '@subsocial/api/substrate/wrappers'\n\n  // ...\n\n  const SPACE_ID = '1059'\n  const ACCOUNT_STORAGE_KEY = 'connected_account'\n\n  const TweetBox: React.FC = () => {\n    const [tweetData, setTweet] = useState('');\n\n    const { api } = useContext(SubsocialContext)\n\n    const onTweetBtnClick = async () => {\n      if (!api) return;\n\n      setTweet('')\n      const accountAddress = localStorage.getItem(ACCOUNT_STORAGE_KEY) ?? ''\n\n      const cid = await api.ipfs.saveContent({\n        title: accountAddress,\n        body: tweetData,\n      })\n\n      const substrateApi = await api.substrateApi\n      const postTransaction = substrateApi.tx.posts.createPost(\n        SPACE_ID,\n        { RegularPost: null }, // Creates a regular post.\n        IpfsContent(cid)\n      )\n      await polkadotjs.signAndSendTx(postTransaction, accountAddress, logTransaction)\n    }\n\n  ...\n")))}u.isMDXComponent=!0}}]);