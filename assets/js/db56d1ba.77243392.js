(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{157:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return l}));var n=a(3),c=a(7),s=(a(0),a(171)),r={id:"spaces",title:"Spaces"},b={unversionedId:"develop/sdk/advanced/spaces",id:"develop/sdk/advanced/spaces",isDocsHomePage:!1,title:"Spaces",description:"Find and load a single space",source:"@site/docs/develop/sdk/advanced/Spaces.md",slug:"/develop/sdk/advanced/spaces",permalink:"/docs/develop/sdk/advanced/spaces",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/sdk/advanced/Spaces.md",version:"current"},o=[{value:"Find and load a single space",id:"find-and-load-a-single-space",children:[{value:"findSpace",id:"findspace",children:[]}]},{value:"Find and load an array of spaces",id:"find-and-load-an-array-of-spaces",children:[{value:"findAllSpaces",id:"findallspaces",children:[]},{value:"findSpaces",id:"findspaces",children:[]},{value:"findPublicSpaces",id:"findpublicspaces",children:[]},{value:"findUnlistedSpaces",id:"findunlistedspaces",children:[]}]}],p={toc:o};function l(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"find-and-load-a-single-space"},"Find and load a single space"),Object(s.b)("h3",{id:"findspace"},"findSpace"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"findSpace(query: FindSpaceQuery): Promise<SpaceData | undefined>\n")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findSpace({id: '1'})\n")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Properties"),Object(s.b)("th",{parentName:"tr",align:null},"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("em",{parentName:"td"},"id")),Object(s.b)("td",{parentName:"tr",align:null},"ID of the desired struct.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("em",{parentName:"td"},"visibility")),Object(s.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(s.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),").")))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findspacequery"},"FindSpaceQuery"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstruct"},Object(s.b)("em",{parentName:"a"},"FindStruct"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},Object(s.b)("em",{parentName:"a"},"AnySpaceId"))," >")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(s.b)("em",{parentName:"a"},"CommonData"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(s.b)("em",{parentName:"a"},"Space")),", ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(s.b)("em",{parentName:"a"},"SpaceContent"))," >")),Object(s.b)("h2",{id:"find-and-load-an-array-of-spaces"},"Find and load an array of spaces"),Object(s.b)("h3",{id:"findallspaces"},"findAllSpaces"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"flatApi.subsocial.findAllSpaces(ids: AnySpaceId[]): Promise<SpaceData[]>\n")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findAllSpaces([ '1' ])\n")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},Object(s.b)("em",{parentName:"a"},"SpaceId"))," | ",Object(s.b)("em",{parentName:"p"},"BN"))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(s.b)("em",{parentName:"a"},"CommonData"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(s.b)("em",{parentName:"a"},"Space")),", ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(s.b)("em",{parentName:"a"},"SpaceContent"))," >")),Object(s.b)("h3",{id:"findspaces"},"findSpaces"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"flatApi.subsocial.findSpaces(query: FindSpacesQuery): Promise<SpaceData[]>\n")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findSpaces({\n  ids: [ '1', '1354', '1573', '1599', '1040' ],\n  visibility: \"onlyVisible\",\n})\n")),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Properties"),Object(s.b)("th",{parentName:"tr",align:null},"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("em",{parentName:"td"},"ids")),Object(s.b)("td",{parentName:"tr",align:null},"An array of IDs of the desired structs.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("em",{parentName:"td"},"visibility")),Object(s.b)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs (see ",Object(s.b)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),").")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("em",{parentName:"td"},"withContentOnly?")),Object(s.b)("td",{parentName:"tr",align:null},"Boolean.")))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#visibility"},"Visibility"),": 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(s.b)("em",{parentName:"a"},"CommonData"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(s.b)("em",{parentName:"a"},"Space")),", ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(s.b)("em",{parentName:"a"},"SpaceContent"))," >")),Object(s.b)("h3",{id:"findpublicspaces"},"findPublicSpaces"),Object(s.b)("p",null,"Load an array of information about public spaces from the Subsocial blockchain and IPFS by a given array of space ",Object(s.b)("inlineCode",{parentName:"p"},"ids"),"."),Object(s.b)("p",null,"A space is considered public if it meets these conditions:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"The ",Object(s.b)("inlineCode",{parentName:"li"},"hidden")," field on its blockchain structure is ",Object(s.b)("inlineCode",{parentName:"li"},"false"),"."),Object(s.b)("li",{parentName:"ul"},"And there is a corresponding JSON file that represents the space's content on IPFS.")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"flatApi.subsocial.findPublicSpaces(ids: AnySpaceId[]): Promise<SpaceData[]>\n")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findPublicSpaces([ '1' ])\n")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},Object(s.b)("em",{parentName:"a"},"SpaceId"))," | ",Object(s.b)("em",{parentName:"p"},"BN"))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(s.b)("em",{parentName:"a"},"CommonData"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(s.b)("em",{parentName:"a"},"Space")),", ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(s.b)("em",{parentName:"a"},"SpaceContent"))," >")),Object(s.b)("h3",{id:"findunlistedspaces"},"findUnlistedSpaces"),Object(s.b)("p",null,"Find and load an array of information about unlisted spaces from the Subsocial blockchain and IPFS by a given array of space ",Object(s.b)("inlineCode",{parentName:"p"},"ids"),"."),Object(s.b)("p",null,"A space is considered unlisted if it meets either of these conditions:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"The ",Object(s.b)("inlineCode",{parentName:"li"},"hidden")," field on its blockchain structure is ",Object(s.b)("inlineCode",{parentName:"li"},"true"),"."),Object(s.b)("li",{parentName:"ul"},"Or there is no corresponding JSON file that represents the space's content on IPFS.")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"flatApi.subsocial.findUnlistedSpaces(ids: AnySpaceId[]): Promise<SpaceData[]>\n")),Object(s.b)("p",null,"Example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.subsocial.findUnlistedSpaces(['1'])\n")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},Object(s.b)("em",{parentName:"a"},"SpaceId"))," | ",Object(s.b)("em",{parentName:"p"},"BN"))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#spacedata"},"SpaceData"),": ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(s.b)("em",{parentName:"a"},"CommonData"))," < ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.space.html"},Object(s.b)("em",{parentName:"a"},"Space")),", ",Object(s.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spacecontent"},Object(s.b)("em",{parentName:"a"},"SpaceContent"))," >")))}l.isMDXComponent=!0},171:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),c=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var p=c.a.createContext({}),l=function(e){var t=c.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},d=function(e){var t=l(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,r=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(a),m=n,u=d["".concat(r,".").concat(m)]||d[m]||i[m]||s;return a?c.a.createElement(u,b(b({ref:t},p),{},{components:a})):c.a.createElement(u,b({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,r=new Array(s);r[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var p=2;p<s;p++)r[p]=a[p];return c.a.createElement.apply(null,r)}return c.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);