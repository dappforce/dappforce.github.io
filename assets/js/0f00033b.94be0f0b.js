"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[5919],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(3117),o=(n(7294),n(3905));const a={id:"like-tweet",title:"Liking a Tweet",displayed_sidebar:"developSidebar"},i=void 0,p={unversionedId:"develop/zero-to-hero/twitter-dapp/like-tweet",id:"develop/zero-to-hero/twitter-dapp/like-tweet",title:"Liking a Tweet",description:"We love interacting with tweets by giving them a \u2764\ufe0f",source:"@site/docs/develop/zero-to-hero/twitter-dapp/LikeaTweet.md",sourceDirName:"develop/zero-to-hero/twitter-dapp",slug:"/develop/zero-to-hero/twitter-dapp/like-tweet",permalink:"/docs/develop/zero-to-hero/twitter-dapp/like-tweet",draft:!1,editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/zero-to-hero/twitter-dapp/LikeaTweet.md",tags:[],version:"current",frontMatter:{id:"like-tweet",title:"Liking a Tweet",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Fetching Tweets",permalink:"/docs/develop/zero-to-hero/twitter-dapp/fetching-tweet"},next:{title:"Finishing The Dapp",permalink:"/docs/develop/zero-to-hero/twitter-dapp/finish-app"}},c={},s=[],l={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We love interacting with tweets by giving them a \u2764\ufe0f"),(0,o.kt)("p",null,"Let's add this functionality on the Dapp. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"  const postId = '1' // Post Id you want to react on.\n  const substrateApi = await api.blockchain.api\n\n  const reactionTx = substrateApi.tx.reactions.createPostReaction(postId, 'Upvote')\n")),(0,o.kt)("p",null,"It's time to add this in the codebase inside of ",(0,o.kt)("strong",{parentName:"p"},"tweet.tsx")," like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"  ...\n\n  const ACCOUNT_STORAGE_KEY = 'connected_account'\n\n  const TweetComponent: React.FC<ITweet> = props => {\n\n    const { api } = useContext(SubsocialContext)\n\n    const likeTweet = async () => {\n      if(!api) return;\n\n      const account = localStorage.getItem(ACCOUNT_STORAGE_KEY) ?? ''\n      const substrateApi = await api.blockchain.api\n\n      const reactionTx = substrateApi.tx.reactions.createPostReaction(props.id!, 'Upvote')\n      polkadotjs.signAndSendTx(reactionTx, account, logTransaction)\n    }\n\n    ...\n  }\n  ...\n")),(0,o.kt)("p",null,"Add an ",(0,o.kt)("strong",{parentName:"p"},"onClick")," listener for this method:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'...\n  const TweetComponent: React.FC<ITweet> = props => {\n    ...\n      <div onClick={likeTweet} className="text-gray-500 select-none hover:text-pinkish anim flex items-center">\n        <Heart color="white" height="20px" width="20px" />\n        <span className="ml-3 mr-3 text-lg">{props.likes}</span>\n      </div>\n    ...\n  }\n')))}d.isMDXComponent=!0}}]);