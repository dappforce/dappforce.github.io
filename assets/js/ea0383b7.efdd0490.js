(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{155:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return l}));var o=r(3),n=r(7),a=(r(0),r(163)),i={id:"create-profiles",title:"Create And Update Profiles",displayed_sidebar:"developSidebar"},c={unversionedId:"develop/how-to-guides/profiles/create-profiles",id:"develop/how-to-guides/profiles/create-profiles",isDocsHomePage:!1,title:"Create And Update Profiles",description:"This section covers how to create and update profiles on the Subsocial blockchain.",source:"@site/docs/develop/how-to-guides/profiles/CreateProfiles.md",slug:"/develop/how-to-guides/profiles/create-profiles",permalink:"/docs/develop/how-to-guides/profiles/create-profiles",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/how-to-guides/profiles/CreateProfiles.md",version:"current",sidebar:"developSidebar",previous:{title:"Fetch Profiles",permalink:"/docs/develop/how-to-guides/profiles/fetch-profiles"},next:{title:"Fetch Spaces",permalink:"/docs/develop/how-to-guides/spaces/fetch-spaces"}},p=[{value:"Create a profile",id:"create-a-profile",children:[]},{value:"Update a profile",id:"update-a-profile",children:[]}],s={toc:p};function l(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"This section covers how to create and update profiles on the Subsocial blockchain.")),Object(a.b)("h2",{id:"create-a-profile"},"Create a profile"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"substateApi.tx.profiles.createProfile(content)\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd78 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.reaction.html"},"IpfsContent"),' is function that return substrate like implementation for enum { IPFS: "CID of your content"}.  ')),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { IpfsContent } from \"@subsocial/api/substrate/wrappers\"\n\n...\nconst cid = await api.ipfs.saveContent({\n  about: 'Subsocial official account.',\n  avatar: 'Qmasp4JHhQWPkEpXLHFhMAQieAH1wtfVRNHWZ5snhfFeBe', // ipfsImageCid = await api.subsocial.ipfs.saveFile(file)\n  name: 'Subsocial',\n})\n\nconst spaceTransaction = substrateApi.tx.spaces.createSpace(\n  IpfsContent(cid),\n  null // Permissions config (optional)\n)\n\n// Send the spaceTransaction and wait for it to get the newly created spaceId.\n// Now set this space as your profile.\n\nconst profileTx = substrateApi.tx.profiles.setProfile(spaceId);\n...\n")),Object(a.b)("h2",{id:"update-a-profile"},"Update a profile"),Object(a.b)("p",null,"Updating a profile is the same as updating the profile space. You can just update the profile space and it will work out of the box."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#profileupdatetype"},"ProfileUpdateType"),": { content: ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/optioncontent.html"},Object(a.b)("em",{parentName:"a"},"OptionContent"))," }  ")))}l.isMDXComponent=!0},163:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),l=function(e){var t=n.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,b=u["".concat(i,".").concat(d)]||u[d]||f[d]||a;return r?n.a.createElement(b,c(c({ref:t},s),{},{components:r})):n.a.createElement(b,c({ref:t},s))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);