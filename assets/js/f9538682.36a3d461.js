"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[4229],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>m});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},s=Object.keys(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),i=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},d=function(t){var e=i(t.components);return n.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,s=t.originalType,l=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=i(a),m=r,k=u["".concat(l,".").concat(m)]||u[m]||c[m]||s;return a?n.createElement(k,o(o({ref:e},d),{},{components:a})):n.createElement(k,o({ref:e},d))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var s=a.length,o=new Array(s);o[0]=u;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:r,o[1]=p;for(var i=2;i<s;i++)o[i]=a[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5295:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>i});var n=a(3117),r=(a(7294),a(3905));const s={id:"create-posts",title:"Create and update Posts",displayed_sidebar:"developSidebar"},o=void 0,p={unversionedId:"develop/sdk/posts/create-posts",id:"develop/sdk/posts/create-posts",title:"Create and update Posts",description:"This section covers how to create and update posts on the Subsocial blockchain.",source:"@site/docs/develop/sdk/posts/CreatePosts.md",sourceDirName:"develop/sdk/posts",slug:"/develop/sdk/posts/create-posts",permalink:"/docs/develop/sdk/posts/create-posts",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/sdk/posts/CreatePosts.md",tags:[],version:"current",frontMatter:{id:"create-posts",title:"Create and update Posts",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Fetch Posts",permalink:"/docs/develop/sdk/posts/fetch-posts"},next:{title:"Fetch Comments",permalink:"/docs/develop/sdk/comments/fetch-comments"}},l={},i=[{value:"Create A Post",id:"create-a-post",level:2},{value:"A Regular Post",id:"a-regular-post",level:3},{value:"A Shared Post",id:"a-shared-post",level:3},{value:"Update A Post",id:"update-a-post",level:2}],d={toc:i};function c(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This section covers how to create and update posts on the Subsocial blockchain.")),(0,r.kt)("h2",{id:"create-a-post"},"Create A Post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"api.substrateApi.tx.posts.createPost(spaceIdOpt, extension, content)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"spaceId")),(0,r.kt)("td",{parentName:"tr",align:null},"The space where a post will be published.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"extension")),(0,r.kt)("td",{parentName:"tr",align:null},"A kind of post. It can be a regular post, a shared post or a comment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"content")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.reaction.html"},"IpfsContent"),' is a function that returns a substrate like implementation for enum { IPFS: "CID of your content"}.')))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ud83c\udd83 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postextensionenum"},"PostExtensionEnum"),": ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/regularpost.html"},(0,r.kt)("em",{parentName:"a"},"RegularPost"))," | ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.comment.html"},(0,r.kt)("em",{parentName:"a"},"Comment"))," | ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/sharedpost.html"},(0,r.kt)("em",{parentName:"a"},"SharedPost")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("h3",{id:"a-regular-post"},"A Regular Post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { IpfsContent } from \"@subsocial/api/substrate/wrappers\"\n\n...\nconst cid = await api.ipfs.saveContent({\n  title: \"What is Subsocial?\",\n  image: \"QmcWWpR176oFao49jrLHUoH3R9MCziE5d77fdD8qdoiinx\",\n  tags: [ 'Hello world', 'FAQ' ],\n  body: 'Subsocial is an open protocol for decentralized social networks and marketplaces. It`s built with Substrate and IPFS.'\n})\n\nconst tx = substrateApi.tx.posts.createPost('1', { RegularPost: null}, IpfsContent(cid))\n\n...\n")),(0,r.kt)("h3",{id:"a-shared-post"},"A Shared Post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { IpfsContent } from \"@subsocial/api/substrate/wrappers\"\n\n...\nconst cid = await ipfs.saveContent({\n  body: 'Keep up the good work!'\n})\n\nconst tx = substrateApi.tx.posts.createPost('1', { SharedPost: '1'}, IpfsContent(cid))\n...\n}\n")),(0,r.kt)("h2",{id:"update-a-post"},"Update A Post"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"substrateApi.tx.posts.updatePost(postId: AnyPostId, update: PostUpdateType)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"postId")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the current space.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"update")),(0,r.kt)("td",{parentName:"tr",align:null},"The fields available to be updated.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Properties"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"spaceId?")),(0,r.kt)("td",{parentName:"tr",align:null},"If a new spaceId is provided, it will move this post to the new space.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"content?")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.reaction.html"},"IpfsContent"),' is a function that returns a substrate like implementation for enum { IPFS: "CID of your content"}.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"hidden?")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean, if post is hidden from other users.")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n  IpfsContent, \n  OptionBool,\n} from \"@subsocial/api/substrate/wrappers\"\n\n...\nconst cid = await api.ipfs.saveContent({\n  title: \"What is Subsocial?\",\n  image: \"QmcWWpR176oFao49jrLHUoH3R9MCziE5d77fdD8qdoiinx\",\n  tags: ['Hello world', 'FAQ', 'Subsoical'], //updated field\n  body: 'Subsocial is an open protocol for decentralized social networks and marketplaces. It`s built with Substrate and IPFS.'\n})\n\nconst update = {\n  content: IpfsContent(cid),\n  hidden: new OptionBool(true),\n}\n\nconst tx = substrateApi.tx.posts.updatePost('1', update)\n...\n")))}c.isMDXComponent=!0}}]);