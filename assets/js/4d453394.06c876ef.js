(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{142:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var s=n(0),a=n.n(s);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),d=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=d(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,r=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=d(n),u=s,m=l["".concat(r,".").concat(u)]||l[u]||b[u]||o;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,r=new Array(o);r[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:s,r[1]=c;for(var p=2;p<o;p++)r[p]=n[p];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return d}));var s=n(3),a=n(7),o=(n(0),n(142)),r={id:"getting-posts",title:"Getting Posts"},c={unversionedId:"sdk/quick-start/posts/getting-posts",id:"sdk/quick-start/posts/getting-posts",isDocsHomePage:!1,title:"Getting Posts",description:"Find and load a single post",source:"@site/docs/sdk/quick-start/posts/GettingPosts.md",slug:"/sdk/quick-start/posts/getting-posts",permalink:"/docs/sdk/quick-start/posts/getting-posts",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/sdk/quick-start/posts/GettingPosts.md",version:"current",sidebar:"someSidebar",previous:{title:"What is Post?",permalink:"/docs/sdk/quick-start/posts/overview"},next:{title:"Creating and updating",permalink:"/docs/sdk/quick-start/posts/creating-posts"}},i=[{value:"Find and load a single post",id:"find-and-load-a-single-post",children:[]},{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",children:[]},{value:"Find and load structs and content",id:"find-and-load-structs-and-content",children:[]}],p={toc:i};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(s.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"find-and-load-a-single-post"},"Find and load a single post"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPost(query: FindPostQuery): Promise<PostData | undefined\n")),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPost({ id: '1' })\n")),Object(o.b)("p",null,"Output: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "1",\n    "struct": {\n        "createdByAccount": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n        "createdAtBlock": 658170,\n        "createdAtTime": 1600870242000,\n        "isUpdated": false,\n        "contentId": "bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we",\n        "id": "1",\n        "ownerId": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n        "hidden": false,\n        "spaceId": "1",\n        "repliesCount": 12,\n        "hiddenRepliesCount": 0,\n        "visibleRepliesCount": 12,\n        "sharesCount": 0,\n        "upvotesCount": 29,\n        "downvotesCount": 0,\n        "score": 835,\n        "isRegularPost": true,\n        "isSharedPost": false,\n        "isComment": false\n    },\n    "content": {\n        "body": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with [Substrate](https://www.substrate.io/) and [IPFS](https://ipfs.io/).",\n        "image": "QmcWWpR176oFao49jrLHUoH3R9MCziE5d77fdD8qdoiinx",\n        "tags": [\n            "Hello World",\n            "FAQ"\n        ],\n        "title": "What is Subsocial?",\n        "summary": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with Substrate and IPFS.",\n        "isShowMore": false\n    }\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},"FindPostQuery"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstruct"},Object(o.b)("em",{parentName:"a"},"FindStruct"))," < ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(o.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(o.b)("em",{parentName:"a"},"CommonData"))," < ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(o.b)("em",{parentName:"a"},"Post")),", ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(o.b)("em",{parentName:"a"},"PostContent"))," >")),Object(o.b)("h2",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),Object(o.b)("p",null,"Find and load an array of information about public posts from Subsocial blockchain and IPFS by a given array of post ",Object(o.b)("inlineCode",{parentName:"p"},"ids"),"."),Object(o.b)("p",null,"Post is considered public if it meets the next conditions:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"hidden")," field on its' blockchain structure is ",Object(o.b)("inlineCode",{parentName:"li"},"false"),"."),Object(o.b)("li",{parentName:"ul"},"And there is a corresponding JSON file that represents the post's content on IPFS.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPublicPosts(ids: AnyId[]): Promise<PostData[]>\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},"FindPostsQuery"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstructs"},Object(o.b)("em",{parentName:"a"},"FindStructs"))," < ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(o.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(o.b)("em",{parentName:"a"},"CommonData"))," < ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(o.b)("em",{parentName:"a"},"Post")),", ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(o.b)("em",{parentName:"a"},"PostContent"))," >")),Object(o.b)("h2",{id:"find-and-load-structs-and-content"},"Find and load structs and content"),Object(o.b)("p",null,"If needs to store information in different places:"),Object(o.b)("h4",{id:"get-structs"},"Get structs"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.findPostStructs(ids: AnyId[]): Promise<PostStruct[]>\nflatApi.findPostStructs(id: AnyId): Promise<PostStruct | undefined>\n")),Object(o.b)("p",null,"Example: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostStruct('1')\n")),Object(o.b)("p",null,"Output: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "createdByAccount": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n  "createdAtBlock": 658170,\n  "createdAtTime": 1600870242000,\n  "isUpdated": false,\n  "contentId": "bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we",\n  "id": "1",\n  "ownerId": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n  "hidden": false,\n  "spaceId": "1",\n  "repliesCount": 12,\n  "hiddenRepliesCount": 0,\n  "visibleRepliesCount": 12,\n  "sharesCount": 0,\n  "upvotesCount": 29,\n  "downvotesCount": 0,\n  "score": 835,\n  "isRegularPost": true,\n  "isSharedPost": false,\n  "isComment": false\n}\n')),Object(o.b)("h4",{id:"get-contents"},"Get contents"),Object(o.b)("p",null,"Find and load off-chain information about a post from IPFS by a given ",Object(o.b)("inlineCode",{parentName:"p"},"cid"),"."),Object(o.b)("p",null,"Post information only exists if there is a corresponding JSON file that represents the post's content on IPFS."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"flatApi.subsocial.ipfs.findPosts(cids: IpfsCid[]): Promise<ContentResult<PostContent>>\nflatApi.subsocial.ipfs.findPost(cid: IpfsCid): Promise<PostContent | undefined>\n")),Object(o.b)("p",null,"Example: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"import { convertToDerivedContent } from \"@subsocial/api/flat-subsocial/utils\" //add summary and isShowMore properties\n\n(async () => {\n  convertToDerivedContent(await flatApi.subsocial.ipfs.findPost('bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we'))\n})()\n")),Object(o.b)("p",null,"Output: "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we": {\n    "body": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with [Substrate](https://www.substrate.io/) and [IPFS](https://ipfs.io/).",\n    "image": "QmcWWpR176oFao49jrLHUoH3R9MCziE5d77fdD8qdoiinx",\n    "tags": [\n      "Hello World",\n      "FAQ"\n    ],\n    "title": "What is Subsocial?",\n    "summary": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with Substrate and IPFS.",\n    "isShowMore": false\n  }\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#ipfscid"},"IpfsCid"),": ",Object(o.b)("em",{parentName:"p"},"string")," | ",Object(o.b)("em",{parentName:"p"},"CID")," | ",Object(o.b)("em",{parentName:"p"},"IpfsCid"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#contentresult"},"ContentResult")," ","<",Object(o.b)("em",{parentName:"p"},"T"),">",": ",Object(o.b)("em",{parentName:"p"},"Record"),"<",Object(o.b)("em",{parentName:"p"},"CidAsStr"),", ",Object(o.b)("em",{parentName:"p"},"T"),">")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(o.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},"PostContent"),": ",Object(o.b)("em",{parentName:"p"},"CommonPostContent")," & { canonical: ",Object(o.b)("em",{parentName:"p"},"string"),"; image: ",Object(o.b)("em",{parentName:"p"},"string"),"; link?: ",Object(o.b)("em",{parentName:"p"},"string"),"; meta?: ",Object(o.b)("em",{parentName:"p"},"MetaItem[]"),"; tags: ",Object(o.b)("em",{parentName:"p"},"string[]"),"; title: ",Object(o.b)("em",{parentName:"p"},"string")," }")))}d.isMDXComponent=!0}}]);