(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{171:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var s=n(0),o=n.n(s);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,s,o=function(e,t){if(null==e)return{};var n,s,o={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),i=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=i(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,r=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),l=i(n),u=s,m=l["".concat(r,".").concat(u)]||l[u]||b[u]||a;return n?o.a.createElement(m,c(c({ref:t},p),{},{components:n})):o.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,r=new Array(a);r[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:s,r[1]=c;for(var p=2;p<a;p++)r[p]=n[p];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return i}));var s=n(3),o=n(7),a=(n(0),n(171)),r={id:"fetch-posts",title:"Fetch Posts",displayed_sidebar:"developSidebar"},c={unversionedId:"develop/how-to-guides/posts/fetch-posts",id:"develop/how-to-guides/posts/fetch-posts",isDocsHomePage:!1,title:"Fetch Posts",description:"This section covers how to fetch posts from the Subsocial blockchain.",source:"@site/docs/develop/how-to-guides/posts/FetchPosts.md",slug:"/develop/how-to-guides/posts/fetch-posts",permalink:"/docs/develop/how-to-guides/posts/fetch-posts",editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/how-to-guides/posts/FetchPosts.md",version:"current",sidebar:"developSidebar",previous:{title:"Create And Update Spaces",permalink:"/docs/develop/how-to-guides/spaces/create-spaces"},next:{title:"Create and update Posts",permalink:"/docs/develop/how-to-guides/posts/create-posts"}},d=[{value:"Find and load a single post",id:"find-and-load-a-single-post",children:[]},{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",children:[]},{value:"Find and load structs and contents separately",id:"find-and-load-structs-and-contents-separately",children:[{value:"Get structs",id:"get-structs",children:[]}]},{value:"Find and load post IDs by space ID",id:"find-and-load-post-ids-by-space-id",children:[]}],p={toc:d};function i(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(s.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"This section covers how to fetch posts from the Subsocial blockchain.")),Object(a.b)("h2",{id:"find-and-load-a-single-post"},"Find and load a single post"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"api.findPost(query: FindPostQuery): Promise<PostData | undefined\n")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"api.findPost({ id: '1' })\n")),Object(a.b)("p",null,"Output: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "1",\n    "struct": {\n        "createdByAccount": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n        "createdAtBlock": 658170,\n        "createdAtTime": 1600870242000,\n        "isUpdated": false,\n        "contentId": "bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we",\n        "id": "1",\n        "ownerId": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n        "hidden": false,\n        "spaceId": "1",\n        "repliesCount": 12,\n        "hiddenRepliesCount": 0,\n        "visibleRepliesCount": 12,\n        "sharesCount": 0,\n        "upvotesCount": 29,\n        "downvotesCount": 0,\n        "score": 835,\n        "isRegularPost": true,\n        "isSharedPost": false,\n        "isComment": false\n    },\n    "content": {\n        "body": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with [Substrate](https://www.substrate.io/) and [IPFS](https://ipfs.io/).",\n        "image": "QmcWWpR176oFao49jrLHUoH3R9MCziE5d77fdD8qdoiinx",\n        "tags": [\n            "Hello World",\n            "FAQ"\n        ],\n        "title": "What is Subsocial?",\n        "summary": "Subsocial is an open protocol for decentralized social networks and marketplaces. It\'s built with Substrate and IPFS.",\n        "isShowMore": false\n    }\n}\n')),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostquery"},"FindPostQuery"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstruct"},Object(a.b)("em",{parentName:"a"},"FindStruct"))," < ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(a.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(a.b)("em",{parentName:"a"},"CommonData"))," < ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(a.b)("em",{parentName:"a"},"Post")),", ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(a.b)("em",{parentName:"a"},"PostContent"))," >")),Object(a.b)("h2",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),Object(a.b)("p",null,"Find and load an array of information about public posts from the Subsocial blockchain and IPFS by a given array of post ",Object(a.b)("inlineCode",{parentName:"p"},"ids"),"."),Object(a.b)("p",null,"A post is considered public if it meets these conditions:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The ",Object(a.b)("inlineCode",{parentName:"li"},"hidden")," field on its blockchain structure is ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},"And there is a corresponding JSON file that represents the post's content on IPFS.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"api.findPublicPosts(ids: AnyId[]): Promise<PostData[]>\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findpostsquery"},"FindPostsQuery"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#findstructs"},Object(a.b)("em",{parentName:"a"},"FindStructs"))," < ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anypostid"},Object(a.b)("em",{parentName:"a"},"AnyPostId"))," >")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#postdata"},"PostData"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules/dto.html#commondata"},Object(a.b)("em",{parentName:"a"},"CommonData"))," < ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.post.html"},Object(a.b)("em",{parentName:"a"},"Post")),", ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#postcontent"},Object(a.b)("em",{parentName:"a"},"PostContent"))," >")),Object(a.b)("h2",{id:"find-and-load-structs-and-contents-separately"},"Find and load structs and contents separately"),Object(a.b)("h3",{id:"get-structs"},"Get structs"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"api.findPostStructs(ids: AnyId[]): Promise<PostStruct[]>\napi.findPostStruct(id: AnyId): Promise<PostStruct | undefined>\n")),Object(a.b)("p",null,"Example: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"api.findPostStruct('1')\n")),Object(a.b)("p",null,"Output: "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n  "createdByAccount": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n  "createdAtBlock": 658170,\n  "createdAtTime": 1600870242000,\n  "isUpdated": false,\n  "contentId": "bafyreidzue2dtxpj6n4x5mktrt7las5wz5diqma47zr25uau743dhe76we",\n  "id": "1",\n  "ownerId": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8",\n  "hidden": false,\n  "spaceId": "1",\n  "repliesCount": 12,\n  "hiddenRepliesCount": 0,\n  "visibleRepliesCount": 12,\n  "sharesCount": 0,\n  "upvotesCount": 29,\n  "downvotesCount": 0,\n  "score": 835,\n  "isRegularPost": true,\n  "isSharedPost": false,\n  "isComment": false\n}\n')),Object(a.b)("h2",{id:"find-and-load-post-ids-by-space-id"},"Find and load post IDs by space ID"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"api.blockchain.postIdsBySpaceId(id: AnySpaceId): Promise<PostId[]>\n")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"api.blockchain.postIdsBySpaceId('1')\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd83 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},Object(a.b)("em",{parentName:"a"},"SpaceId"))," | ",Object(a.b)("em",{parentName:"p"},"BN"),"  ")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\ud83c\udd78 ",Object(a.b)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.postid.html"},"PostId"))))}i.isMDXComponent=!0}}]);