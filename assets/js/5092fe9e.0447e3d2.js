"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[3328],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>f});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(o),f=r,b=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return o?n.createElement(b,a(a({ref:t},u),{},{components:o})):n.createElement(b,a({ref:t},u))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=o[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},3890:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=o(3117),r=(o(7294),o(3905));const i={id:"connectToSubsocial",title:"Connect To Subsocial",displayed_sidebar:"developSidebar"},a=void 0,c={unversionedId:"develop/how-to-guides/connectToSubsocial",id:"develop/how-to-guides/connectToSubsocial",title:"Connect To Subsocial",description:"This section covers how to connect to the Subsocial blockchain using our JS SDK.",source:"@site/docs/develop/how-to-guides/ConnectToSubsocial.md",sourceDirName:"develop/how-to-guides",slug:"/develop/how-to-guides/connectToSubsocial",permalink:"/docs/develop/how-to-guides/connectToSubsocial",draft:!1,editUrl:"https://github.com/dappforce/dappforce.github.io/docs/develop/how-to-guides/ConnectToSubsocial.md",tags:[],version:"current",frontMatter:{id:"connectToSubsocial",title:"Connect To Subsocial",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Configuration",permalink:"/docs/develop/how-to-guides/configuration"},next:{title:"Signing & Sending Transactions",permalink:"/docs/develop/how-to-guides/transactions"}},s={},l=[{value:"Initializing The APIs",id:"initializing-the-apis",level:3}],u={toc:l};function p(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This section covers how to connect to the Subsocial blockchain using our JS SDK.")),(0,r.kt)("p",null,"After the ",(0,r.kt)("a",{parentName:"p",href:"/docs/develop/how-to-guides/configuration"},"Configuration")," settings you can create an instance of the Subsocial api, so that you can have access to all blockchain methods:"),(0,r.kt)("h3",{id:"initializing-the-apis"},"Initializing The APIs"),(0,r.kt)("p",null,"You need to initialize the Subsocial Api and set authorizations for saving content on IPFS with the following syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { SubsocialApi } from "@subsocial/api";\nimport { config } from "config";\nimport { generateCrustAuthToken } from "@subsocial/api/utils/ipfs";\n\nconst initSubsocialApi = async () => {\n  const api = await SubsocialApi.create(config);\n  return api;\n};\n\nconst authHeader = generateCrustAuthToken(\n  "bottom drive obey lake curtain smoke basket hold race lonely fit walk//Alice"\n);\n\n// Use this ipfs object, to set authHeader for writing on Crust IPFS cluster.\napi.ipfs.setWriteHeaders({\n  authorization: "Basic " + authHeader,\n});\n')),(0,r.kt)("p",null,"In order to deploy content on your own ipfs node, just change the property ipfsNodeUrl in the configuration settings"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Before going deep in the SDK you can try out the code in our ",(0,r.kt)("a",{parentName:"p",href:"https://play.subsocial.network"},"Playground"),".")))}p.isMDXComponent=!0}}]);