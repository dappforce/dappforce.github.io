"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[4397],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},i=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=r,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||s;return a?n.createElement(k,p(p({ref:t},i),{},{components:a})):n.createElement(k,p({ref:t},i))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,p=new Array(s);p[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var c=2;c<s;c++)p[c]=a[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7302:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(3117),r=(a(7294),a(3905));const s={id:"create-spaces",title:"Create And Update Spaces",displayed_sidebar:"developSidebar"},p=void 0,o={unversionedId:"develop/sdk/spaces/create-spaces",id:"develop/sdk/spaces/create-spaces",title:"Create And Update Spaces",description:"This section covers how to create and update spaces on the Subsocial blockchain.",source:"@site/docs/develop/sdk/spaces/CreateSpaces.md",sourceDirName:"develop/sdk/spaces",slug:"/develop/sdk/spaces/create-spaces",permalink:"/docs/develop/sdk/spaces/create-spaces",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/sdk/spaces/CreateSpaces.md",tags:[],version:"current",frontMatter:{id:"create-spaces",title:"Create And Update Spaces",displayed_sidebar:"developSidebar"},sidebar:"developSidebar",previous:{title:"Fetch Spaces",permalink:"/docs/develop/sdk/spaces/fetch-spaces"},next:{title:"Fetch Posts",permalink:"/docs/develop/sdk/posts/fetch-posts"}},l={},c=[{value:"Create A Space",id:"create-a-space",level:2},{value:"Update A Space",id:"update-a-space",level:2},{value:"Space Permissions",id:"space-permissions",level:2}],i={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This section covers how to create and update spaces on the Subsocial blockchain.")),(0,r.kt)("h2",{id:"create-a-space"},"Create A Space"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"substrateApi.tx.spaces.createSpace(content, permissionsOpt)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"content")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.reaction.html"},"IpfsContent"),' is a function that returns a substrate like implementation for enum { IPFS: "CID of your content"}.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"permissions")),(0,r.kt)("td",{parentName:"tr",align:null},"advanced options.")))),(0,r.kt)("p",null,"Example: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { IpfsContent } from \"@subsocial/api/substrate/wrappers\"\n...\nconst cid = await api.ipfs.saveContent({\n  about: 'Subsocial is an open protocol for decentralized social networks and marketplaces. It`s built with Substrate and IPFS',\n  image: 'Qmasp4JHhQWPkEpXLHFhMAQieAH1wtfVRNHWZ5snhfFeBe', // ipfsImageCid = await api.subsocial.ipfs.saveFile(file)\n  name: 'Subsocial',\n  tags: [ 'subsocial' ]\n})\n\nconst tx = substrateApi.tx.spaces.createSpace(\n  IpfsContent(cid),\n  null\n)\n...\n")),(0,r.kt)("h2",{id:"update-a-space"},"Update A Space"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"substrateApi.tx.spaces.updateSpace(spaceId: AnySpaceId, update: SpaceUpdateType)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"spaceId")),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the current space.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"update")),(0,r.kt)("td",{parentName:"tr",align:null},"fields available to be updated.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Properties"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"content"),"?"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.reaction.html"},"IpfsContent"),' is a function that returns a substrate like implementation for enum { IPFS: "CID of your content"}.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"hidden"),"?"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean, if space is hidden from other users.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"permissions"),"?"),(0,r.kt)("td",{parentName:"tr",align:null},"advance opt.")))),(0,r.kt)("p",null,"Example: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n  IpfsContent, \n  OptionBool,\n} from \"@subsocial/api/substrate/wrappers\"\n\n...\nconst cid = await api.ipfs.saveContent({\n  about: 'Subsocial is an open protocol for decentralized social networks and marketplaces. It`s built with Substrate and IPFS',\n  image: 'Qmasp4JHhQWPkEpXLHFhMAQieAH1wtfVRNHWZ5snhfFeBe', \n  name: 'Subsocial updated', // updated field\n  tags: ['subsocial']\n})\n\nconst update = {\n  content: IpfsContent(cid),\n  hidden: new OptionBool(true),\n}\n      \nconst tx = substrateApi.tx.spaces.updateSpace('1', update)\n...\n")),(0,r.kt)("h2",{id:"space-permissions"},"Space Permissions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Blockchains by nature are public and transparent, which means that anyone can read any data you store in these spaces. To hide it from people, you can to encrypt the data from your end. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"none"),(0,r.kt)("td",{parentName:"tr",align:null},"Read-Only Content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"everyone"),(0,r.kt)("td",{parentName:"tr",align:null},"Everyone can write.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"follower"),(0,r.kt)("td",{parentName:"tr",align:null},"Only the space followers can write.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spaceOwner"),(0,r.kt)("td",{parentName:"tr",align:null},"Only the space owner can write.")))),(0,r.kt)("p",null,"Writing includes both updating the space data and adding new posts to a particular space."),(0,r.kt)("p",null,"The way you can set permissions is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  const tx = substrateApi.tx.spaces.createSpace(IpfsContent(cid), {follower: true})\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ud83c\udd83 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#anyspaceid"},"AnySpaceId"),": ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceid.html"},(0,r.kt)("em",{parentName:"a"},"SpaceId"))," | ",(0,r.kt)("em",{parentName:"p"},"BN"),"  ")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ud83c\udd83 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/modules.html#spaceupdatetype"},"SpaceUpdateType"),": { content: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/optioncontent.html"},(0,r.kt)("em",{parentName:"a"},"OptionContent")),", handle: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/optionoptiontext.html"},(0,r.kt)("em",{parentName:"a"},"OptionOptionText")),", hidden: ",(0,r.kt)("em",{parentName:"p"},"Option"),"<",(0,r.kt)("em",{parentName:"p"},"bool"),">, permissions: ",(0,r.kt)("em",{parentName:"p"},"Option"),"<",(0,r.kt)("em",{parentName:"p"},"Option"),"<",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spacepermissions.html"},(0,r.kt)("em",{parentName:"a"},"SpacePermissions"))," >> }  ")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\ud83c\udd78 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/interfaces/interfaces.spaceupdate.html"},"SpaceUpdate"),"  ")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://docs.subsocial.network/js-docs/js-sdk/classes/optionbool.html"},"OptionBool"))))}d.isMDXComponent=!0}}]);