"use strict";(self.webpackChunksubsocial_docs=self.webpackChunksubsocial_docs||[]).push([[1244],{5788:(e,t,n)=>{n.d(t,{Iu:()=>p,yg:()=>m});var a=n(1504);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),y=d(n),u=l,m=y["".concat(o,".").concat(u)]||y[u]||g[u]||i;return n?a.createElement(m,r(r({ref:t},p),{},{components:n})):a.createElement(m,r({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[y]="string"==typeof e?e:l,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(5072),l=(n(1504),n(5788));const i={id:"posts-with-details",title:"Posts With Details",displayed_sidebar:"developSidebar"},r=void 0,s={unversionedId:"develop/sdk/posts/posts-with-details",id:"develop/sdk/posts/posts-with-details",title:"Posts With Details",description:"Alternate Methods To Get Posts With The Subsocial JS SDK",source:"@site/docs/develop/sdk/posts/PostWithDetails.md",sourceDirName:"develop/sdk/posts",slug:"/develop/sdk/posts/posts-with-details",permalink:"/docs/develop/sdk/posts/posts-with-details",draft:!1,editUrl:"https://github.com/dappforce/subsocial-docs/tree/main/docs/develop/sdk/posts/PostWithDetails.md",tags:[],version:"current",frontMatter:{id:"posts-with-details",title:"Posts With Details",displayed_sidebar:"developSidebar"},sidebar:"developSidebar"},o={},d=[{value:"Find and load a single post",id:"find-and-load-a-single-post",level:2},{value:"findPostWithAllDetails",id:"findpostwithalldetails",level:3},{value:"findPostWithSomeDetails",id:"findpostwithsomedetails",level:3},{value:"Find and load an array of posts",id:"find-and-load-an-array-of-posts",level:2},{value:"findPostsWithAllDetails",id:"findpostswithalldetails",level:3},{value:"findPublicPostsWithAllDetails",id:"findpublicpostswithalldetails",level:3},{value:"findUnlistedPostsWithAllDetails",id:"findunlistedpostswithalldetails",level:3},{value:"findPublicPostsWithSomeDetails",id:"findpublicpostswithsomedetails",level:3}],p={toc:d},y="wrapper";function g(e){let{components:t,...n}=e;return(0,l.yg)(y,(0,a.c)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("head",null,(0,l.yg)("title",null,"Alternate Methods To Get Posts With The Subsocial JS SDK")),(0,l.yg)("p",null,"All entities (posts, profiles, and spaces) are interconnected. For faster data retrieval use\nthe ",(0,l.yg)("inlineCode",{parentName:"p"},"findPostWithAllDetails")," method."),(0,l.yg)("h2",{id:"find-and-load-a-single-post"},"Find and load a single post"),(0,l.yg)("h3",{id:"findpostwithalldetails"},"findPostWithAllDetails"),(0,l.yg)("p",null,"Finds and loads a post with their extension and the owner's profile and space (if defined)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"flatApi.findPostWithAllDetails(id: AnyPostId): Promise<PostWithAllDetails | undefined>\n")),(0,l.yg)("p",null,"Example:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithAllDetails('1')\n")),(0,l.yg)("p",null,"Output:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": {"id": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8"...},\n  "space": {"id": "1"...}\n}\n')),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/interfaces/api_src_subsocial.ISubsocialApi.html#findPostWithAllDetails"},"here"))),(0,l.yg)("h3",{id:"findpostwithsomedetails"},"findPostWithSomeDetails"),(0,l.yg)("p",null,"Finds and loads a post with their extension and the owner's profile (if defined)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"flatApi.findPostWithSomeDetails(query: FindPostWithDetailsQuery): Promise<PostWithSomeDetails | undefined>\n")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Properties"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"ids")),(0,l.yg)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"visibility")),(0,l.yg)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withContentOnly?")),(0,l.yg)("td",{parentName:"tr",align:null},"Boolean.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withSpace?")),(0,l.yg)("td",{parentName:"tr",align:null},"Pass ",(0,l.yg)("inlineCode",{parentName:"td"},"true")," to get the space data.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withOwner?")),(0,l.yg)("td",{parentName:"tr",align:null},"Pass ",(0,l.yg)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"\ud83c\udd83 type Visibility: 'onlyVisible' | 'onlyHidden' | 'onlyPublic' | 'onlyUnlisted'")),(0,l.yg)("p",null,"The four visible state filters correspond to the next conditions:"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Filters"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"onlyVisible")),(0,l.yg)("td",{parentName:"tr",align:null},"returns posts where the ",(0,l.yg)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",(0,l.yg)("inlineCode",{parentName:"td"},"false"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"onlyHidden")),(0,l.yg)("td",{parentName:"tr",align:null},"returns posts where the ",(0,l.yg)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",(0,l.yg)("inlineCode",{parentName:"td"},"true"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"onlyPublic")),(0,l.yg)("td",{parentName:"tr",align:null},"returns posts where the ",(0,l.yg)("inlineCode",{parentName:"td"},"hidden")," field on the corresponding Substrate struct is ",(0,l.yg)("inlineCode",{parentName:"td"},"false")," and there is a corresponding JSON file on IPFS.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"onlyUnlisted")),(0,l.yg)("td",{parentName:"tr",align:null},"returns posts where either the ",(0,l.yg)("inlineCode",{parentName:"td"},"hidden")," field is ",(0,l.yg)("inlineCode",{parentName:"td"},"true")," or there is no corresponding JSON file on IPFS.")))),(0,l.yg)("p",null,"Example: "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithSomeDetails({id: '1'})\n")),(0,l.yg)("p",null,"Output: "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": undefined,\n  "space": undefined\n}\n')),(0,l.yg)("p",null,"Example with owner: "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-typescript"},"flatApi.findPostWithSomeDetails({id: '1', withOwner: true})\n")),(0,l.yg)("p",null,"Output: "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},'{\n  "ext": undefined,\n  "id": "1",\n  "post": {"id": "1"...},\n  "owner": {"id": "3osmnRNnrcScHsgkTJH1xyBF5kGjpbWHsGrqM31BJpy4vwn8"...},\n  "space": undefined\n}\n')),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/interfaces/api_src_subsocial.ISubsocialApi.html#findPostWithSomeDetails"},"here"))),(0,l.yg)("h2",{id:"find-and-load-an-array-of-posts"},"Find and load an array of posts"),(0,l.yg)("h3",{id:"findpostswithalldetails"},"findPostsWithAllDetails"),(0,l.yg)("p",null,"findPostsWithAllDetails returns information of the post, space and owner (profile)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"flatApi.findPostsWithAllDetails(query: FindPostsQuery): Promise<PostWithAllDetails[]>\n")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Properties"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"ids")),(0,l.yg)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"visibility")),(0,l.yg)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withContentOnly?")),(0,l.yg)("td",{parentName:"tr",align:null},"Boolean.")))),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/classes/api_src_subsocial.SubsocialApi.html#findPostsWithAllDetails"},"here"))),(0,l.yg)("p",null,"\ud83d\udc47 ",(0,l.yg)("strong",{parentName:"p"},"There are also methods with ready-made visibility filters.")),(0,l.yg)("h3",{id:"findpublicpostswithalldetails"},"findPublicPostsWithAllDetails"),(0,l.yg)("p",null,"Find and load posts that have the ",(0,l.yg)("inlineCode",{parentName:"p"},"hidden == false")," field in their Substrate struct and their IPFS content is\nnot empty, using their extension and the owner's profile and space (if defined)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"api.findPublicPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/interfaces/api_src_subsocial.ISubsocialApi.html#findPublicPostsWithAllDetails"},"here"))),(0,l.yg)("h3",{id:"findunlistedpostswithalldetails"},"findUnlistedPostsWithAllDetails"),(0,l.yg)("p",null,"Find and load posts that have the ",(0,l.yg)("inlineCode",{parentName:"p"},"hidden == true")," field in their Substrate struct and their IPFS content is\nnot empty, using their extension and owner's profile and space (if defined)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"flatApi.findUnlistedPostsWithAllDetails(ids: AnyPostId[]): Promise<PostWithAllDetails[]>\n")),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/interfaces/api_src_subsocial.ISubsocialApi.html#findUnlistedPostsWithAllDetails"},"here"))),(0,l.yg)("h3",{id:"findpublicpostswithsomedetails"},"findPublicPostsWithSomeDetails"),(0,l.yg)("p",null,"Load an array of information about public posts with the space and/or owner."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"flatApi.findPublicPostsWithSomeDetails(query: FindPostsWithDetailsQuery): Promise<PostWithSomeDetails[]\n")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Properties"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"ids")),(0,l.yg)("td",{parentName:"tr",align:null},"An array of IDs of desired structs.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"visibility")),(0,l.yg)("td",{parentName:"tr",align:null},"Filter for the visible state of the structs")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withContentOnly?")),(0,l.yg)("td",{parentName:"tr",align:null},"Boolean.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withSpace?")),(0,l.yg)("td",{parentName:"tr",align:null},"Pass ",(0,l.yg)("inlineCode",{parentName:"td"},"true")," to get the space data.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("em",{parentName:"td"},"withOwner?")),(0,l.yg)("td",{parentName:"tr",align:null},"Pass ",(0,l.yg)("inlineCode",{parentName:"td"},"true")," to get the profile data.")))),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},"Read API docs ",(0,l.yg)("a",{parentName:"p",href:"https://js-sdk-api.subsocial.network/interfaces/api_src_subsocial.ISubsocialApi.html#findPublicPostsWithSomeDetails"},"here"))))}g.isMDXComponent=!0}}]);